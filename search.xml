<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Vol30.不忘初心]]></title>
      <url>https://goldymark.github.io/2016/12/11/%E4%B8%8D%E5%BF%98%E5%88%9D%E5%BF%83/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[旧瓶新思]]></title>
      <url>https://goldymark.github.io/2016/12/11/%E6%97%A7%E7%93%B6%E6%96%B0%E6%80%9D/</url>
      <content type="text"><![CDATA[故事一 魏文王问名医扁鹊说∶“你们家兄弟三人，都精于医术，到底哪一位最厉害呢？”扁鹊答说∶“长兄最好，中兄次之，我最差。”文王又问∶“那么为什么你最出名呢？”扁鹊答说∶“我长兄治病，是治病于病情发作之前。由于一般人不知道他是在事先就铲除了病因，所以他的名气无法传出去，只有我们家的人才知道。我中兄治病，是治病于病情初起之时。一般人以为他只能治轻微的小病，所以他的名气只及于本乡里。而我扁鹊治病，是治病于病情严重之时。一般人都看到我在经脉上穿针管来放血、在皮肤上敷药等大手术，所以以为我的医术高明，名气因此响遍全国。” 回顾这些年的工作，似乎总在“解决”各种各样的问题，却很少去思考：解决这些问题真的有必要和价值吗？解决了之后呢？ 我认为，一个人首先要有解决问题的能力。在这之上，每次遇到问题之前强迫自己去思考一下是否有避免问题的办法，并且是正方向、低成本、可实施的。久而久之，就会习惯以这种思维去思考问题。 个人见解避免可以避免的问题，解决不能避免的问题。 献上一句我很欣赏的名言： Intellectuals solve problems, geniuses prevent them. –Albert Einstein 故事二 缅甸有这么一个传说：有一条恶龙，每年要求村庄献祭一个处女，每年这个村庄都会有一个少年英雄去与恶龙搏斗，但无人生还。又一个英雄出发时，有人悄悄尾随。龙穴铺满金银财宝，英雄用剑刺死恶龙，然后坐在尸身上，看着闪烁的珠宝，慢慢地长出鳞片、尾巴和触角，最终变成恶龙。 之所以想起这个故事，缘于某天我无聊时翻看以前旧项目的代码（想当年还吐槽过这些代码如何如何烂。。PS:不是我写的），突然发现这些我现在写的这些东西竟与当年的那些烂代码有几分相像。然后重新code review了自己现在写的代码，有的的确很烂却不知道如何变得优雅（连Intellij都吐槽说too complex了……），有的可能设计得只有自己知道如何运行。 在review的过程中，多多少少也能想明白以前旧项目那些烂代码所遭遇到的困境，也能体会到当时作者的心情——不是我不想优雅，奈何条件不允许（时间、成本、变数等）。 Anyway，我们还是应该以此为方向。 以铜为镜可以正衣冠，以人为镜可以明得失，以史为镜可以知兴衰。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol29.后悔]]></title>
      <url>https://goldymark.github.io/2016/11/04/%E5%90%8E%E6%82%94/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何通过ODBC连接transbase数据库]]></title>
      <url>https://goldymark.github.io/2016/10/20/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87odbc%E8%BF%9E%E6%8E%A5transbase%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="text"><![CDATA[最近在研究transbase数据库，发现transbase提供JDBC和ODBC两种连接驱动。前者比较简单就不叙述了，这里主要说一下如何通过ODBC驱动连接transbase数据库。 hint：关于在win7 32bit/64bit下如何打开ODBC配置，请自行搜索相关知识，本文不作介绍。 第一步：配置ODBC驱动按照以下配置修改注册表：1234567[HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\&lt;DRIVERNAME&gt;]&quot;UsageCount&quot;=dword:00000001&quot;Driver&quot;=&quot;&lt;INSTALLATIONPATH&gt;\\tbodbc32.dll&quot;&quot;Setup&quot;=&quot;&lt;INSTALLATIONPATH&gt;\\tbsodb32.dll&quot;&quot;Configuration&quot;=&quot;&lt;INSTALLATIONPATH&gt;\\tbwin.ini&quot;[HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers] &quot;&lt;DRIVERNAME&quot;=&quot;Installed&quot; 注意： 把&lt;DRIVERNAME&gt;替换成单独的驱动名称（不与现有的重复即可），例如：transbase； 把&lt;INSTALLATIONPATH&gt;替换成transbase的安装目录； 第二步：配置DSN123456789[HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBC.INI\ODBC Data Sources]&quot;&lt;DSN&gt;&quot;=&quot;&lt;DRIVERNAME&gt;&quot;[HKEY_LOCAL_MACHINE\ SOFTW ARE\ODBC\ODBC.INI\&lt;DSN&gt;]&quot;Driver&quot;=&quot;&lt;INSTALLATIONPATH&gt;\\tbodbc32.dll&quot;&quot;Description&quot;=&quot;Electronic Part Catalogue B&amp;H&quot;&quot;Dbhost&quot;=&quot;&lt;SERVERNAME&gt;&quot;&quot;Dbname&quot;=&quot;&lt;DBNAME&gt;&quot;&quot;Option1&quot;=&quot;No&quot;&quot;Option2&quot;=&quot;No&quot; 注意： 把&lt;DRIVERNAME&gt;替换成第一步中的&lt;DRIVERNAME&gt;，例如：transbase； 把&lt;INSTALLATIONPATH&gt;替换成transbase的安装目录； 把&lt;DSN&gt;替换成单独的数据源名称（不与现有的重复即可），例如：EPC B&amp;H； 把&lt;SERVER&gt;替换成transbase数据库的host地址； 把&lt;DBNAME&gt;替换成transbase数据库名称； 接下来就可以按网上连接ODBC驱动的教程连接transbase数据库了。 Google搜索关键词transbase redistribution]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol28.独一无二]]></title>
      <url>https://goldymark.github.io/2016/07/13/%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hessian序列化的坑]]></title>
      <url>https://goldymark.github.io/2016/07/13/hessian%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E5%9D%91/</url>
      <content type="text"><![CDATA[之前使用dubbo服务的过程中发生了一个关于hessian序列化引起的bug，有点意思，记录一下。 hessian序列化Collections.emptyList()时，会转换成ArrayList()，并且同一对象内会共用同一个ArrayList对象，例如： ProductDTO.java123456789101112/*** 商品属性表DTO*/List&lt;ProductAttributeDTO&gt; productAttributeDTOs = Collections.emptyList();/*** 配件DTO*/List&lt;PartsDTO&gt; partsDTOs = Collections.emptyList();/*** 车型DTO*/List&lt;CarTypeDTO&gt; carTypeDTOs = Collections.emptyList(); 以下代码：123456789List&lt;ProductAttributeNameDTO&gt; productAttributeNameDTOs = queryProductAttributeNamesByCategoryId(topCategoryId);List&lt;ProductAttributeDTO&gt; productAttributeDTOs = productDTO.getProductAttributeDTOs();// @1Set&lt;Integer&gt; attrNameIds = Sets2.transform(productAttributeDTOs, ProductAttributeDTO::getAttrNameId);productAttributeNameDTOs.stream() .filter(v -&gt; !attrNameIds.contains(v.getAttrNameId())) .forEach(v -&gt; &#123; ProductAttributeDTO productAttributeDTO = ProductDTOTransformers.convert(v, new ProductAttributeDTO()); productAttributeDTOs.add(productAttributeDTO);// @2 &#125;); 以上代码的productDTO是从dubbo服务获取的，虽然ProductDTO的默认值是Collections.emptyList()（代码@1），但由于Collections#EMPTY_LIST并无实现序列化接口，hessian在序列化的过程中将其转换成ArrayList，并且同一对象内的Collections.emptyList()都会共用同一个ArrayList对象，造成执行@2操作的时候，partsDTOs和carTypeDTOs同样持有相同的ArrayList对象（java是伪泛型，运行期会抹除），所以当打开debugger或将productDTO序列化成JSON时会发现productAttributeDTOs, partsDTOs和carTypeDTOs的内容是一样的。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol27.最好的结局]]></title>
      <url>https://goldymark.github.io/2016/05/08/%E6%9C%80%E5%A5%BD%E7%9A%84%E7%BB%93%E5%B1%80/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用NodeJS操作Excel]]></title>
      <url>https://goldymark.github.io/2016/04/05/%E4%BD%BF%E7%94%A8NodeJS%E6%93%8D%E4%BD%9CExcel/</url>
      <content type="text"><![CDATA[本周做了比较多数据导入、统计的工作（多是一次性工作，并非常态化），所以考虑使用NodeJS操作Excel（拼SQL、提取/生成数据、etc），提高工作效率（其实是Mac的Excel不好用……）。 首先安装NodeJS，这里不叙述；然后用NPM安装node-xlsx，如果选择全局安装的话，加上-g参数1npm i node-xlsx Example Code readExcel.js1234567891011121314const fs = require('fs'); //文件操作模块，类似Java中的File类const xlsx = require('node-xlsx');// 读取excel操作const sheets = xlsx.parse(要读取的Excel路径); //这一步会将Excel表的数据读取并转换成json格式/** * do what you want to do * ... */// 写入excel操作let file = xlsx.build([&#123;name:"sheet1","data":一个二维数组&#125;,&#123;name:"sheet2","data":一个二维数组&#125;])fs.writeFileSync(写入文件的文件名.xlsx, file , 'binary');]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[记一次跨域问题的解决方案]]></title>
      <url>https://goldymark.github.io/2016/04/05/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      <content type="text"><![CDATA[用Vue.js写了个页面，显示开发、测试环境下各项目正在运行的分支情况（相对QA较为有用）。 原理：调用Jenkins提供的API，限制：Jenkins的API只返回了最近100条记录，在没有数据库保存历史数据的情况下，并不能真正实现查看所有项目的当前运行分支情况（例如一些低频发布的应用就可能不在这100条记录里面），但对于发布频繁的测试环境来说，100条记录足够了； 代码本身没什么技术含量，但由于是一个纯前端页面，所以不可避免地遇到了跨域这个问题。 看了一下解决跨域问题的文章，主流的解决方法基本基于JSONP和CORS，然而这两种方法都需要后端配合，not BIGGER； 然后参考了一下main-static上的nginx配置，发现用的CORS方案，not BIGGER； 然后突然想到我们用的是nginx反向代理，是否可以通过nginx来欺骗浏览器以为是同源访问呢？（灵感来自于文末的插件） 往这方面搜了一下，果然有这方面的文章，而且综合对比了几种解决方案，这种方案是成本最低的，不涉及代码改造，只需要nginx配置一下即可； 遂找运维说明了一下情况，然后运维以迅雷不及掩耳盗铃之势加上了以下的配置： 123456location /devjob/ &#123; proxy_pass http://dev.jenkins.***.net/job/;&#125;location /testjob/ &#123; proxy_pass http://test.jenkins.***.net/job/;&#125; 这样，只要代码里的调用地址改为…/devjob/就能访问到对应域名了； 感谢运维帮忙解决这个问题。 另外安利一个chrome插件Allow-Control-Allow-Origin: *，可以在本地浏览器解决跨域问题，方便调试。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol26.富贵患难]]></title>
      <url>https://goldymark.github.io/2016/04/04/%E5%AF%8C%E8%B4%B5%E6%82%A3%E9%9A%BE/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用JRebel实现热部署]]></title>
      <url>https://goldymark.github.io/2016/03/18/%E4%BD%BF%E7%94%A8JRebel%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2/</url>
      <content type="text"><![CDATA[情景： xx-biz里的XXServiceImpl有问题，改； mvn install，等； 重启应用，等； 李大爷说还是有问题，再改，回到步骤1； 以上情景相信大家并不陌生。然后，不知道大家有没有统计过每天浪费在【编译】+【重启应用】的时间有多少呢？浪费时间的同时也十分影响工作情绪，也容易打断思路。 为此，本人尝试用了一下JRebel，分享一下。 安装JRebel插件（这里以Intelij IDEA为例）； UNO； 打开左侧的JRebel标签，将需要热部署的Maven模块打勾（这里以supplier-web为例），然后IDE会自动在打勾模块下的src/main/resources下生成rebel.xml（建议在.gitignore文件中添加rebel.xml，防止提交到git仓库）； 打开supplier-web-publish下的pom.xml，将jetty插件的scanIntervalSeconds的值设为0，关闭jetty的自动重启； 点击右上角的Debug with JRebel，以debug模式启动项目； 在项目运行的状态下，尝试修改Java代码，然后重新编译该文件（右键，Compile ‘…….java’）； 如果控制台出现以下信息，表示JRebel已经能正常运作了； Fly me to the moon and let me play among the stars. Save time, save life.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol25.到此为止]]></title>
      <url>https://goldymark.github.io/2016/03/05/%E5%88%B0%E6%AD%A4%E4%B8%BA%E6%AD%A2/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[罗生门]]></title>
      <url>https://goldymark.github.io/2016/03/03/%E7%BD%97%E7%94%9F%E9%97%A8/</url>
      <content type="text"><![CDATA[假想的《罗生门》Live版…… 《罗生门》作曲： 伍乐城作词： 黄伟文 Juno：若果你 未觉荒谬被传闻谈论的疯子 挽着手 Kay：很感激 喜欢我十年 仍不休近日旧同学 说我已耿耿于你心 六百周很可惜 这一世未能 长厮守但事实 如若告诉你 或更内疚我爱过 哈啰吉蒂吗 似乎没有狄更斯 是 漫画吗仍然少女 误会了吗迷恋蔽眼 才给美化但其实 真懂得我吗那动人时光 不用常回看能提取温暖 以后渡严寒就关起那间房最动人时光 未必地老天荒难忘的 因你太念念 才难忘容易抱住谁十年 最难是放 Kay：真心讲 想起那段情 仍不枉若路上重遇 会笑笑问你近况你每晚更新的脸书 却无谓看离别了若想心安先不要每夜重翻旧案望着更好的地方为下段爱恋吸收阳光那动人时光 不用常回看能提取温暖 以后渡严寒就关起那间房最动人时光 未必地老天荒难忘的 因你太念念 才难忘容易眼泪流十年难在擦干 Juno：还在叹息 那爱恋不到气绝 便已安葬Kay：怕挂念太猖狂 Juno：教两人 心里有道不解的咒 没法释放 让我们打听对方今天过得一切平安纵使相见已是路人茫茫 记忆中你仍像初恋好看吻过二十年还未寒 离去六十年仍热烫共你就似被旧情下了降 像下了降每晚都想起对方谁亦会讲 假使那样怀念 必会再次有迴光其实只要 让我耿耿某人思忆早闪闪发光 Juno&amp;Kay：个个也探问 爱恋不老的秘方Juno：唯独壮烈离座 Kay：难道抱着残像Juno&amp;Kay：可百世流芳你未忘 我未忘Juno：犹胜伴在旁 Kay：情信亦泛黄 Karen：不心安 清早与夜来 亦望望收不到信号 过两秒 又再看看Juno&amp;Karen：你说过 常联系对方Juno&amp;Karen：从前号码 Kay：那动人时光Juno&amp;Karen：等于老地方 Kay：不用常回看Juno&amp;Karen：不敢拆掉再装 Kay：能提取温暖 以后渡严寒就关起那间房Juno&amp;Karen：犹如绝症 Kay：最动人时光Juno&amp;Karen：天天有预感 Kay：未必地老天荒Juno&amp;Karen：幸福即将再降 Kay：最缠绵 那黑影即使 每夜游荡Kay：其实一早 已给安葬Juno&amp;Karen：情人若 你也未忘约定谁 过十年暗渡陈仓 Juno：再续夜航Kay&amp;Karen：别疯狂Juno：下个一月Juno&amp;Karen：愿如期团聚于 Kay：让前尘沉淀于 Juno：冰岛某地方Kay&amp;Karen：福岛某地方 十年前我们一同亲手建立的，十年后亦只有我们两人才能把他彻底摧毁。这两个人，一个叫麦浚龙，另一个叫黄伟文。到了现刻为止，大家所听到的只是一个开端。只能说，没至少一个十年，又谈何念念不忘。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol24.过去]]></title>
      <url>https://goldymark.github.io/2016/03/03/%E8%BF%87%E5%8E%BB/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol23.离开这个城市]]></title>
      <url>https://goldymark.github.io/2016/02/22/%E7%A6%BB%E5%BC%80%E8%BF%99%E4%B8%AA%E5%9F%8E%E5%B8%82/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol22.执念]]></title>
      <url>https://goldymark.github.io/2016/01/18/%E6%89%A7%E5%BF%B5/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol21.一点点希望]]></title>
      <url>https://goldymark.github.io/2015/12/25/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B8%8C%E6%9C%9B/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol20.命运]]></title>
      <url>https://goldymark.github.io/2015/12/19/%E5%91%BD%E8%BF%90/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol19.无题]]></title>
      <url>https://goldymark.github.io/2015/12/11/%E6%97%A0%E9%A2%98/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol18.顺其自然]]></title>
      <url>https://goldymark.github.io/2015/12/06/%E9%A1%BA%E5%85%B6%E8%87%AA%E7%84%B6/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol17.从没有爱过]]></title>
      <url>https://goldymark.github.io/2015/11/11/%E4%BB%8E%E6%B2%A1%E6%9C%89%E7%88%B1%E8%BF%87/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol16.善良比聪明更难]]></title>
      <url>https://goldymark.github.io/2015/10/18/%E5%96%84%E8%89%AF%E6%AF%94%E8%81%AA%E6%98%8E%E6%9B%B4%E9%9A%BE/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol15.想念]]></title>
      <url>https://goldymark.github.io/2015/08/15/%E6%83%B3%E5%BF%B5/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol14.怪人]]></title>
      <url>https://goldymark.github.io/2015/07/26/%E6%80%AA%E4%BA%BA/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol13.成为更好的人]]></title>
      <url>https://goldymark.github.io/2015/06/05/%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BA%BA/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol12.照片]]></title>
      <url>https://goldymark.github.io/2015/05/23/%E7%85%A7%E7%89%87/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol11.明天]]></title>
      <url>https://goldymark.github.io/2015/04/04/%E6%98%8E%E5%A4%A9/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol10.祈祷词]]></title>
      <url>https://goldymark.github.io/2015/03/31/%E7%A5%88%E7%A5%B7%E8%AF%8D/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol9.心有灵犀]]></title>
      <url>https://goldymark.github.io/2015/03/08/%E5%BF%83%E6%9C%89%E7%81%B5%E7%8A%80/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol8.爱]]></title>
      <url>https://goldymark.github.io/2015/02/09/%E7%88%B1/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol7.身份]]></title>
      <url>https://goldymark.github.io/2015/01/17/%E8%BA%AB%E4%BB%BD/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol6.最好的爱情]]></title>
      <url>https://goldymark.github.io/2014/11/27/%E6%9C%80%E5%A5%BD%E7%9A%84%E7%88%B1%E6%83%85/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol5.一脚踩空]]></title>
      <url>https://goldymark.github.io/2014/10/25/%E4%B8%80%E8%84%9A%E8%B8%A9%E7%A9%BA/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Convert shp to geojson, for ECharts]]></title>
      <url>https://goldymark.github.io/2014/10/17/convert-shp-to-geojson-for-echarts/</url>
      <content type="text"><![CDATA[最近在用AngularJS+ECharts做图表，要用到镇街一级的当地地图，无奈ECharts只能提供到市一级（demo里有一个能显示到县/区一级，here），故要用到ECharts的扩展地图功能。 扩展方法官方doc说得很明白了，here； PS:官方doc里只提供了jQuery的写法，我这里补充一个AngularJS的写法： jQuery（官网写法）： 1$.getJSON('geoJson/USA_geo.json', callback); AngularJS： 123$http.get('geoJson/USA_geo.json', function(data)&#123; callback(data);// 其实就是把获取到的geoJSON传入callback函数&#125;); 但我手头上只有shp的地图格式，而ECharts要用到geojson格式。百度google一番后，大致有如下两种方法： 用工具转换，例如GDAL的ogr2ogr，下载地址：here； 在线转换，地址如下： http://ogre.adc4gis.com（可能墙） http://converter.mygeodata.eu（可能墙） http://www.mapshaper.org (备注：这个不知道是我不懂得用还是本身有缺陷，转换后的geojson不能用，而且会丢失字段，列在这里仅供参考) http://vis.sccas.cn/demo/map（ECharts作者@Kener-林峰 提供的） 先说一下背景： 我的shp文件的地理坐标是GCS_WGS1984，投影坐标系是WGS_1984_UTM_Zone_49N（Transverse_Mercator）。 ogr2ogr： 完整命令如下（Mac版，其他版本估计差异不大）： 1/Library/Frameworks/GDAL.framework/Programs/ogr2ogr -f &quot;geoJSON&quot; -t_srs &quot;WGS84&quot; -s_srs &quot;+proj=utm +zone=49 +datum=WGS84 +units=m +no_defs&quot; &quot;area.json&quot; &quot;area.shp&quot; 重点是-s_srs的参数； ogre.adc4gis.com： 按网站上的说明，把.shp, .dbf, .shx, .prj(可选)打包成zip； 在Convert to GeoJSON框里选择刚才打包的zip包； 在Target SRS里输入“WGS84”（关键步骤）； 点击“CONVERT TO GEOJSON”按钮，然后就会生成相应的geoJSON； converter.mygeodata.eu 同上，将shp、dbf等打包成zip包并上传提交； 上传成功后，理论上能在地图里预览你的shp文件对应的区域； 在Target vector format选项框里，选择GeoJSON(.json)； 在Output coordinate system选项框里，选择WGS 84（关键步骤）； 点击Convert now!； adc4gis功能比较基本，mygeodata功能比较丰富（支持Vecotr data的编辑），大家各取所需吧。 不知道是不是编码方式没选对，我在两个网站转换出来的geojson中的中文都是乱码，不过我的字段也不多，手动改也不是很麻烦（但后来用ogr2ogr转换出来的就没问题）。 其实这三种方法的关键一步都是要把输出的坐标系统设置为WGS 84，其他都比较好理解。 由于本人对GIS不是很熟悉，光是google以上东西这些就花了我半天的时间了，在这里mark一下，希望有需要的人能少走弯路，毕竟大部分都不需要研究GIS，而只是单纯的想要个geojson文件而已（新版本的arcGIS的arcToolbox好像有转换成geojson的工具）。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[linux下的随机数问题]]></title>
      <url>https://goldymark.github.io/2014/09/05/linux%E4%B8%8B%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E9%97%AE%E9%A2%98/</url>
      <content type="text"><![CDATA[需求用java将字符串通过DES加密。 本地环境：操作系统：Windows XP SP3 32bitJDK版本：Sun JDK6 服务器环境操作系统：Linux 64bitJDK版本：Open JDK7 百度了一下，很多相关代码，直接拿来就用，发现有一个问题：在本地测试的时候没问题，但发布到服务器后，同一个text和keyStr，每次加密生成的字符串竟然是不同的。 最后把问题代码定位到getKey()方法上，代码如下： 1234567891011121314151617/** * 根据参数生成Key; * * @param keyStr */private static Key getKey(String keyStr) &#123; Key key = null; try &#123; KeyGenerator keyGenerator = KeyGenerator.getInstance(ALGORITHM); keyGenerator.init(new SecureRandom(keyStr.getBytes())); key = keyGenerator.generateKey(); keyGenerator = null; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return key;&#125; 在服务器上单独测试了几次这段代码，发现每次传入同一个keyStr生成的Key值，返回的数据竟然是不同的，测试代码如下：123for (int i = 0; i &lt; 5; i++) &#123; System.out.println(new String(getKey("test").getEncoded()));&#125; 为此我怀疑过是不是32位和64位、JDK6和JDK7、SunJDK和OpenJDK之间的问题，用虚拟机虚拟了几个环境测试，发现如下（OK表示没问题，FALSE表示有问题）：1、Win7 32bit SunJDK7 ———–OK2、LinuxMint 32bit OpenJDK7 ———–FALSE3、WinXP 32bit SunJDK6（本地环境） ———–OK4、Mac 64bit OpenJDK7 ———–FALSE5、SL-Linux 64bit OpenJDK7（服务器环境） ———–FALSE 当时就在纠结上面那3个怀疑方向，google了一番之后，好像也没人提到32位/64位的,于是怀疑JDK6和JDK7和SunJDK和OpenJDK之间的差异问题，就在上面几次测试之后，突然想起，会不会是操作系统之间的差异问题呢？！因为本人之前认为Java是跨平台的，JVM在不同平台下对代码的解释应该是一样的（差异仅在性能之间），所以没想到是操作系统之间的差异问题。但因为这段代码涉及到随机数的生成问题，而随机数可能是跟操作系统有关系的，所以根据这方面的联想google一番之后，got it！貌似这是一个著名的linux问题……后来将getKey()方法里的try块修改如下：12345678910try &#123; KeyGenerator keyGenerator = KeyGenerator.getInstance(ALGORITHM); SecureRandom random = SecureRandom.getInstance("SHA1PRNG"); random.setSeed(keyStr.getBytes()); keyGenerator.init(random); key = keyGenerator.generateKey(); keyGenerator = null;&#125; catch (Exception e) &#123; e.printStackTrace();&#125; 问题解决！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol4.不喜欢别人的理由]]></title>
      <url>https://goldymark.github.io/2014/08/08/%E4%B8%8D%E5%96%9C%E6%AC%A2%E5%88%AB%E4%BA%BA%E7%9A%84%E7%90%86%E7%94%B1/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol3.旧故事里，只有自己]]></title>
      <url>https://goldymark.github.io/2014/05/27/%E6%97%A7%E6%95%85%E4%BA%8B%E9%87%8C%EF%BC%8C%E5%8F%AA%E6%9C%89%E8%87%AA%E5%B7%B1/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol2.只有一个一生]]></title>
      <url>https://goldymark.github.io/2014/04/07/%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E4%B8%80%E7%94%9F/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vol1.无奈]]></title>
      <url>https://goldymark.github.io/2014/03/28/%E6%97%A0%E5%A5%88/</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[解决Eclipse的快捷提示弹出过快的问题]]></title>
      <url>https://goldymark.github.io/2014/01/08/%E8%A7%A3%E5%86%B3eclipse%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%8F%90%E7%A4%BA%E5%BC%B9%E5%87%BA%E8%BF%87%E5%BF%AB%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="text"><![CDATA[用过Eclipse的可能遇到这样一个问题，鼠标移到类、方法、变量等的时候会瞬间弹出快捷提示的窗口，而Eclipse里面貌似也没有设置弹出等待时间的选项，在这里我找到了解决方法，原文地址：http://untamedmind.wordpress.com/2008/11/08/changing-the-mousehovertime-add-delay-on-the-tooltips-pop-up/ 大致操作就是： 进入注册表，进入[HKEY_CURRENT_USER]\Control Panel\Mouse； 在右侧窗口查找MouseHoverTime的字符串值； 把其值修改为300（至于这个时间的单位是什么，我也不清楚，我个人建议300~400）； 如果在第2步找不到这个字符串值，那就自己新建一个吧； 重启即可。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何在GWT实现点击Button（或其他Widget）打开文件选择对话框]]></title>
      <url>https://goldymark.github.io/2013/09/18/%E5%A6%82%E4%BD%95%E5%9C%A8gwt%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%87%BBbutton%EF%BC%88%E6%88%96%E5%85%B6%E4%BB%96widget%EF%BC%89%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E5%AF%B9%E8%AF%9D%E6%A1%86/</url>
      <content type="text"><![CDATA[最近用gwt-bootstrap实现UI开发，还不错，但FileUpload这个组件太占位置，所以我想用个Button取而代之。但FileUpload本身没有实现click()方法，google一番后，其实还是要调用底层的实现（很奇怪GWT为什么没有实现这个简单的click()方法）。 代码如下：1fileUpload.getElement().&lt;InputElement&gt; cast().click(); 将代码放入Button的click事件监听器内即可。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[翻译：UiBinder with I18N]]></title>
      <url>https://goldymark.github.io/2013/09/14/%E7%BF%BB%E8%AF%91%EF%BC%9Auibinder-with-i18n/</url>
      <content type="text"><![CDATA[原文地址http://www.gwtproject.org/doc/latest/DevGuideUiBinderI18n.html 翻译时间2013年9月10日至2013年9月14日 译者注这篇文章是我边看边译的，方便自己的同时也方便他人。内容不完全直译，未必100%准确，只能翻译出大概意思，本人之前毫无翻译经验，如有错漏之处，敬请指教。 译文本文主要探讨UiBinder模板的I18N功能，想了解更多UiBinder的功能，请浏览Declarative Layout with UiBinder（译者注：该文章的中文版，click here） 目录 背景； Bonjour, Tout Le Monde（Hello,world）！ Message内的简易HTML标记 隐藏（保护）部分消息 Messages在运行期的值运算 将Widgets植入message当中（只适用于HTMLPanel） 翻译HTML属性 具有多重含义的词组 背景UiBinder模板可以用于本地化标记，使用&lt;ui:msg&gt;和&lt;ui:attribute&gt;元素表示该模板的哪些部分应进行翻译，在构建应用程序时提供版本化本地化消息的properties文件。 原文：then provide properties files with localized versions of the messages when building your app. 前文中（click here）通过一系列的典型应用例子部分介绍了如何本地化你的UI模板。注意：你将看到UiBinder的本地化与GWT的Messages有很多相似之处，原因是：UiBinder的I18N功能是通过为每个模板生成一个隐藏的com.google.gwt.i18n.client.Messages接口而实现的。除了复数形式（原文：plural forms），你能通过模板实现Messages所实现的。 Bonjour, Tout Le Monde（Hello,world）这里将展示如何开启这个功能。 Original：123&lt;ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'&gt; &lt;div&gt;Hello, world.&lt;/div&gt;&lt;/ui:UiBinder&gt; Tagged：123456&lt;ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder' ui:generateFormat='com.google.gwt.i18n.rebind.format.PropertiesFormat' ui:generateKeys="com.google.gwt.i18n.rebind.keygen.MD5KeyGenerator" ui:generateLocales="default"&gt; &lt;div&gt;&lt;ui:msg description="Greeting"&gt;Hello, world.&lt;/ui:msg&gt;&lt;/div&gt;&lt;/ui:UiBinder&gt; 在这里我们做了两件事。一、通过在根元素&lt;ui:UiBinder&gt;里面添加一些属性来配置UiBinder的I18N功能；二、单独标记需要实现本地化的文本。先来看看“Hello，World”这个文本。我们将放进&lt;ui:msg&gt;的“Hello，World”标记为一条可翻译的文本，一个Message.description属性是用来描述该消息的用途。虽然只是个可选属性，但可能是翻译者在上下文中能看到的为数不多的信息，所以你应该习惯性地为消息添加描述，就像为代码添加注释一样。现在我们有了需要翻译的东西，我们通过一些配置在&lt;ui:UiBinder&gt;里面的属性告诉UiBinder如何完成翻译工作。这些ui:generate*属性相当于LocalizableResource的@Generate标注。详见如下： ui:generateFormat使用java properties格式。 ui:generateKeys使用消息内容的MD5哈希值作为键集合，因此消息翻译才能在模板内生效。（如果我们留意一下properties是如何被管理的，你会发现在多个模板使用同一个message只需要翻译一次） ui:generateLocales将生成的properties作为default locale的一部分。（关于default locale和fallback properties的更多内容，请浏览Locales in GWT）编译应用程序时，给gwt compiler传递一个-extras参数，告诉编译器生成应用程序的附属文件。然后就会为每个模板生成一个包含所有message入口标记位置的properties文件。 12345# Generated from my.app.HelloWorldMyBinderImplGenMessages# for locale default# Description: Greeting022A824F26735ED0582324BE34F3CAE1=Hello, world. 生成的文件名是根据你定义的UiBinder接口而定的，有点惨不忍睹。举个例子：模板名称：com.example.app.client.Hello.Binder；module名称：App；运行带有-extra /tmp/gwt-extras参数的gwt compiler；然后你会发现文件的路径是这个样子：/tmp/gwt-extras/com.example.app.App/com.example.app.client.HelloBinderImplGenMessages.properties 就如包大人所说的：这，并不好笑嘛。希望在GWT以后的发行版本里面能有更简洁的解决方案。 然后，你可以在ui.xml文件的同一目录下创建该文件的本地化版本。继续上面的例子，一个Mexican Spanish版本的本地化properties应命名为HelloBinderImplGenMessages_es_MX.properties（注意将com.example...前缀咔擦掉）。你不一定需要使用MD5 keys。如果你想自定义键名，可以在&lt;ui:msg&gt;里面添加一个key属性并指定你想要设置的键名。另一方面，如果你坚持使用MD5 keys，你可以将应用程序所有的翻译集合成一个指定特定语言环境的文件，而不是让他们遍布你的代码。这个properties文件的文件名格式是：LocalizableResource_&lt;locale&gt;.properties，而且你必须把这个文件放在com/google/gwt/i18n/client包下面。（原理：i18n properties文件会沿着类继承树往上搜寻，而所有Messages接口都继承于LocalizableResource） 译者注：这个功能看上去挺有趣，有兴趣的可以去了解以下。 有些项目会使用脚本来维护这些统一的翻译文件。这里有个来自puzzlebazar项目的例子（wiki entry）。 还有其他I18N属性可以配置在&lt;ui:UiBinder&gt;元素下，其实相当于Localizable的其他注解，但你很少会改变他们的默认值。 ui:defaultLocaleSee @DefaultLocale for details ui:generateFilenameSee @Generate(fileName = “…”) for details ui:baseMessagesInterface设置用于生成Messages的基类接口，值必须是全路径类名，且该类需继承于Messages接口。你可以添加任何注解，以便公司及项目范围内的设置可以在一个地方修改即可。如有必要，你也可以覆盖该接口其他属性的默认值。 Message内的简易HTML标记&lt;ui:msg&gt;可以适当地使用HTML标记。 Original：1We &lt;b&gt;strongly&lt;/b&gt; urge you to reconsider. Tagged：1&lt;ui:msg&gt;We &lt;b&gt;strongly&lt;/b&gt; urge you to reconsider.&lt;/ui:msg&gt; UiBinder中的Messages支持HTML，不只是文本。 隐藏（保护）部分消息 译者注：这部分内容翻译起来有点难，可能看代码反而更容易理解。 有时候你需要将message的某些部分隐藏起来，以防翻译者破坏你的应用程序。 Original：123&lt;!-- Uh oh, don't want translator to mess up brand CSS or the trademark span --&gt;&lt;div&gt;&lt;span class="brand"&gt;Colgate&lt;/span&gt;, with MFP!&lt;span class="tm"&gt;TM&lt;/span&gt;&lt;/div&gt; Tagged：12345678&lt;div&gt; &lt;ui:msg description="blurb"&gt;&lt;span class="brand" ui:ph="brandedSpan"&gt;Colgate&lt;/span&gt;, with MFP!&lt;ui:ph name="trademark"&gt;&lt;span class="tm"&gt;TM&lt;/span&gt;&lt;/ui:ph&gt;&lt;/ui:msg&gt;&lt;/div&gt;Generated：# Description: blurb# 0=arg0 (Example: &lt;span class='brand'&gt;), 1=arg1 (Example: &lt;/span&gt;), 2=arg2 (Example: &lt;span class='tm'&gt;TM&lt;/span&gt;)6E8B421C6A7C1FEAE23FAA9D43C90D5E=&#123;0&#125;Colgate&#123;1&#125;, with MFP\!&#123;2&#125; 在这里例子中有两个地方。首先，你可以在&lt;ui:msg&gt;里面的任何子元素添加ui:ph属性，表明这里应该创建占位符免受翻译。在element的开始和结束标记位置会创建两个占位符（在这个例子里，分别是brandedSpanOpen和brandedSpanClose）。然后，我们同样看到一个名为ui:ph的子元素，可以将任何被保护的元素置于其包围之中（在这个例子里，就是tradermark占位符）。所以，你既可以将被保护的元素置于&lt;ui:ph&gt;包围之下，就像&lt;ui:ph&gt;don&#39;t translate&lt;/ui:ph&gt;，也可以使用ui:ph属性隐藏元素的开始和结束标记（相对于翻译者而言），只保留元素的内容允许翻译，就像&lt;span ui:ph&gt;attribute&lt;/span&gt;。注意：你可以将ui:ph属性置于任何DOM element，而不只是&lt;span&gt;。 译者注：其实上面这段话的意思就是：ui:ph既可以作为element的属性使用，也可以将&lt;ui:ph&gt;作为element封装需要被保护的元素。用法1：&lt;span class=&quot;brand&quot; ui:ph=&quot;brandedSpan&quot;&gt;Colgate&lt;/span&gt; 用法2：&lt;ui:ph name=&quot;trademark&quot;&gt;&lt;span class=&quot;tm&quot;&gt;TM&lt;/span&gt;&lt;/ui:ph&gt; Messages在运行期的值运算当你想在运行期间修改模板的某一部分，你通常会将ui:field放入一个span或者其他element并且置于其HTML当中。当你在&lt;ui:msg&gt;里面这样做，它会自动保护免受翻译。 Original：12&lt;!-- Java code will make calls like getClosingDate().setInnerText(closingDate()) --&gt;(closed &lt;span ui:field="closingDate" /&gt; through &lt;span ui:field="reopeningDate"/&gt;) Tagged：123&lt;ui:msg description='closed for business message'&gt; (closed &lt;span ui:field='closingDate' /&gt; through &lt;span ui:field='reopeningDate'/&gt;)&lt;/ui:msg&gt; Generated：123# Description: closed for business message# 0=arg0 (Example: &lt;span id=&apos;&apos;&gt;), 1=arg1 (Example: &lt;/span&gt;), 2=arg2 (Example: &lt;span id=&apos;&apos;&gt;), 3=arg3 (Example: &lt;/span&gt;)E30D43242E1AD2AC2EFA1AEEEFDFCC33=(closed &#123;0&#125;&#123;1&#125; through &#123;2&#125;&#123;3&#125;) 这里有一个好消息和坏消息。好消息就是你不需要在标记有ui:filed属性的span里额外添加任何ui:ph属性或用&lt;ui:ph&gt;包围去保护开始和结束标记。坏消息就是无法限制翻译者在这些开始和结束标记之间添加任何东西。Notice：{0}{1} and {2}{3}如果这是个问题，你需要将spans放入&lt;ui:ph&gt;里面以被保护，就像这样： Tagged：1234&lt;ui:msg&gt; (closed &lt;ui:ph name='closingDate' example="7/12/2008"&gt;&lt;span ui:field="closingDate"/&gt;&lt;/ui:ph&gt; through &lt;ui:ph name='reopeningDate' example="7/12/2008"&gt;&lt;span ui:field="reopeningDate"/&gt;&lt;/ui:ph&gt;)&lt;/ui:msg&gt; Generated：12# 0=arg0 (Example: 7/12/2008), 1=arg1 (Example: 7/12/2008)53B9CF65553DFAA091435791E5C731E7=(closed &#123;0&#125; through &#123;1&#125;) example属性是可选的，这个属性允许你提供翻译者更多关于占位符的值和用途用法的信息，方便翻译者。 译者注：这一节同样看代码能更易理解，对比两段tagged和generated就很容易明白，大概意思就是说如果你需要在&lt;ui:msg&gt;里面使用ui:field的话，需要使用&lt;ui:ph&gt;包围封装带有ui:field属性的element。 将Widgets植入message当中（只适用于HTMLPanel）当使用&lt;g:HTMLPanel&gt;时，你可能会想将widgets植入messages当中。这个可以有！ Original：123456&lt;g:HTMLPanel&gt; Meeting starts at &lt;my:TimePicker ui:field="startPicker"/&gt; and ends at &lt;my:TimePicker ui:field="endPicker"/&gt;.&lt;/g:HTMLPanel&gt; Tagged：1234567&lt;g:HTMLPanel&gt; &lt;ui:msg&gt;Meeting starts at &lt;my:TimePicker ui:field="startPicker"/&gt; and ends at &lt;my:TimePicker ui:field="endPicker"/&gt;. &lt;/ui:msg&gt;&lt;/g:HTMLPanel&gt; Generated：12# 0=arg0 (Example: &lt;span&gt;), 1=arg1 (Example: &lt;/span&gt;), 2=arg2 (Example: &lt;span&gt;), 3=arg3 (Example: &lt;/span&gt;)23CBEA252C9901BF84D757FAD4968289=Meeting starts at &#123;0&#125;&#123;1&#125; and ends at &#123;2&#125;&#123;3&#125;. 注意：widgets是没有ui:ph属性的，因为不需要。当一个widget出现在message中的时候，widget需要做什么是毫无歧义的。需要留意的是你只能在HTMLPanel里面做这种事情（widgets in messages），因为HTMLPanel是GWT里面唯一一个widget能混合html标记和子widget。 更多：你可能注意到在生成的properties文件里每个widget拥有太多的占位符，这意味着翻译者可能会引入一些不需要的文本到在运行期被widgets取代的spans里面。出现这样的事情，除了浪费翻译者的时间，不会造成任何危害。widgets还在那里，而文本则会丢失——你的用户不会看到这些文本。 当你把一个包含在message文本主体里的widget放入HTMLPanel，事情会变得更加有趣（widget implements HasText, HasHTML）。 Original：1234&lt;g:HTMLPanel&gt; To do the thing, &lt;g:Hyperlink targetHistoryToken="/doThe#thing"&gt;click here&lt;/g:Hyperlink&gt; and massage vigorously.&lt;/g:HTMLPanel&gt; Tagged：123456&lt;g:HTMLPanel&gt; &lt;ui:msg&gt; To do the thing, &lt;g:Hyperlink targetHistoryToken="/doThe#thing"&gt;click here&lt;/g:Hyperlink&gt; and massage vigorously. &lt;/ui:msg&gt;&lt;/g:HTMLPanel&gt; Generated：12# 0=arg0 (Example: &lt;span&gt;), 1=arg1 (Example: &lt;/span&gt;)8EFBF967A3FEFE78C41C8A298562A094=To do the thing, &#123;0&#125;click here&#123;1&#125; and massage vigorously. 译者注：但我觉得这种做法很恶心…… 翻译HTML属性可以翻译的并不只是主体文本——属性同样也可以。比较常见的有title属性（tool-tip文本）和的alt`标记。 Original：1&lt;th title="Gross recipts"&gt;Gross&lt;/th&gt; Tagged：1234&lt;th title="Gross receipts"&gt; &lt;ui:attribute ui:name='title' ui:description='Tooltip text for gross column'/&gt; &lt;ui:msg description='name of gross column'&gt;Gross&lt;/ui:msg&gt;&lt;/th&gt; 具有多重含义的词组需要注意的是，words在不同的上下文中有时候会表达不同的意思。 Original：123Favorite Color: &lt;ui:RadioButton name=&quot;color&quot;&gt;Red&lt;/ui:RadioButton&gt; &lt;ui:RadioButton name=&quot;color&quot;&gt;Orange&lt;/ui:RadioButton&gt; 123Favorite Fruit: &lt;ui:RadioButton name=&quot;fruit&quot;&gt;Apple&lt;/ui:RadioButton&gt; &lt;ui:RadioButton name=&quot;fruit&quot;&gt;Orange&lt;/ui:RadioButton&gt; Tagged：123Favorite Color: &lt;ui:RadioButton name=&quot;color&quot;&gt;&lt;ui:msg&gt;Red&lt;/ui:msg&gt;&lt;/ui:RadioButton&gt; &lt;ui:RadioButton name=&quot;color&quot;&gt;&lt;ui:msg meaning=&quot;the color&quot;/&gt;Orange&lt;/ui:msg&gt;&lt;/ui:RadioButton&gt; 123Favorite Fruit: &lt;ui:RadioButton name=&quot;fruit&quot;&gt;&lt;ui:msg&gt;Apple&lt;/ui:msg&gt;&lt;/ui:RadioButton&gt; &lt;ui:RadioButton name=&quot;fruit&quot;&gt;&lt;ui:msg meaning=&quot;the fruit&quot;&gt;Orange&lt;ui:msg&gt;&lt;/ui:RadioButton&gt; Generated：123456789# Meaning: the color4404BE8C34552617D633271BBC1FAB07=Orange# Meaning: the fruit7A6DCA1ACC86B4A7D7574CD6BDD4E0C1=Orange9F6290F4436E5A2351F12E03B6433C3C=AppleEE38E4D5DD68C4E440825018D549CB47=Red The punchline here is that a translator may well be working with no more context than the attributes you set on an individual message. （译者注：这句不懂得翻译，但也不大影响对本节内容的理解） 如果你将所有的翻译都放入一个大池当中使用，而它们之间仅仅通过MD5哈希值来区别区分的话，你在这里就不能提供“两种口味”的“Organge”了。 所以，你可以通过使用meaning属性来解决这个问题。不同description的是，meaning属性是会影响生成的哈希值的。 译者注：这一节大意就是说当一个properties里有同一个值的时候，需要增加一个meaning属性来区分彼此。 结尾语自己在做翻译的过程中也觉得翻译不好做，也不知道自己的理解和表达是否准确，希望对学习uibinder的人有一点点帮助吧。这里附上一个有关UiBinder的PDF下载地址。gwt-ui-overhaul]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[egit的一个小错误]]></title>
      <url>https://goldymark.github.io/2013/04/10/egit%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%94%99%E8%AF%AF/</url>
      <content type="text"><![CDATA[用EGit和坚果云搭配开发环境，配置egit时提示一个错误：1The current branch is not configured for pull. No value for key branch.master.merge found in configuration Google一番后发现原来是egit的config文件缺少了一些参数，在stackoverflow找到解决方法，如下图 http://stackoverflow.com/questions/8820668/the-current-branch-is-not-configured-for-pull-no-value-for-key-branch-master-mer 谨以此文记录本人学习git的一个小过程。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vaadin学习笔记之记一次编译错误]]></title>
      <url>https://goldymark.github.io/2013/02/21/vaadin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</url>
      <content type="text"><![CDATA[系统Windows XP SP3； 浏览器Chrome 版本 24.0.1312.57 m IDEEclipse 4.2 Juno 以前一直在用GWT，最近看到Vaadin，好像不错的样子，有意学习之（截至发布时最新版本为7.0.1）。 按官网说明，用Maven生成一个新的Vaadin7项目后，直接在Eclipse里面Run on Server（用的是Tomcat7），结果弹窗如下： Google一番之后找到解决办法，原来运行Vaadin项目前要先编译一次，运行mvn vaadin:compile之后，再Refresh一下项目，然后运行，OK！ 这篇博文要说的就是在编译过程中出现的一个问题，估计也不会很多人会遇到，但我还是把它写下来吧。 刚开始编译的时候，死活编译不过，看控制台输出的信息也看不出个倪端，控制台信息如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.SLF4J: Defaulting to no-operation (NOP) logger implementationSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.[INFO] Scanning for projects...[WARNING][WARNING] Some problems were encountered while building the effective model for cn.nh121:Test:war:1.0[WARNING] &apos;build.plugins.plugin.version&apos; for org.mortbay.jetty:jetty-maven-plugin is missing. @ line 133, column 12[WARNING] &apos;build.plugins.plugin.version&apos; for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 76, column 12[WARNING][WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.[WARNING][WARNING] For this reason, future Maven versions might no longer support building such malformed projects.[WARNING][INFO][INFO] ------------------------------------------------------------------------[INFO] Building Vaadin Web Application 1.0[INFO] ------------------------------------------------------------------------[INFO][INFO] &gt;&gt;&gt; vaadin-maven-plugin:7.0.1:compile (default-cli) @ Test &gt;&gt;&gt;[INFO][INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ Test ---[debug] execute contextualize[INFO] Using &apos;UTF-8&apos; encoding to copy filtered resources.[INFO] skip non existing resourceDirectory D:\development\workspace\Test\src\main\resources[INFO][INFO] --- vaadin-maven-plugin:7.0.1:resources (default) @ Test ---[INFO] auto discovered modules [cn.nh121.AppWidgetSet][INFO] 1 source files from GWT module cn.nh121.AppWidgetSet[INFO][INFO] &lt;&lt;&lt; vaadin-maven-plugin:7.0.1:compile (default-cli) @ Test &lt;&lt;&lt;[INFO][INFO] --- vaadin-maven-plugin:7.0.1:compile (default-cli) @ Test ---[INFO] auto discovered modules [cn.nh121.AppWidgetSet][INFO] Compiling module cn.nh121.AppWidgetSet[INFO] Computing all possible rebind results for &apos;com.vaadin.client.metadata.ConnectorBundleLoader&apos;[INFO] Rebinding com.vaadin.client.metadata.ConnectorBundleLoader[INFO] Invoking generator com.vaadin.server.widgetsetutils.ConnectorBundleLoaderFactory[INFO] Populating eager bundle[INFO] Visiting VerticalLayoutConnector with ConnectorInitVisitor[INFO] VerticalLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.orderedlayout.VerticalLayoutState as a bean[INFO] Will serialize class java.util.HashMap&lt;com.vaadin.shared.Connector, com.vaadin.shared.ui.orderedlayout.AbstractOrderedLayoutState.ChildComponentData&gt; as a bean[INFO] Will serialize class com.vaadin.shared.ui.orderedlayout.AbstractOrderedLayoutState.ChildComponentData as a bean[INFO] Will serialize class com.vaadin.shared.communication.URLReference using URLReference_Serializer[INFO] Visiting UIConnector with ConnectorInitVisitor[INFO] UIConnector will be in the eager bundle[INFO] Visiting UIConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.ui.UIConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.ui.UIState as a bean[INFO] Visiting TableConnector with ConnectorInitVisitor[INFO] TableConnector will be in the eager bundle[INFO] Visiting TableConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.table.TableConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.table.TableState as a bean[INFO] Visiting NativeSelectConnector with ConnectorInitVisitor[INFO] NativeSelectConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.AbstractFieldState as a bean[INFO] Visiting CustomComponentConnector with ConnectorInitVisitor[INFO] CustomComponentConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.AbstractComponentState as a bean[INFO] Visiting WindowConnector with ConnectorInitVisitor[INFO] WindowConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.window.WindowState as a bean[INFO] Visiting PasswordFieldConnector with ConnectorInitVisitor[INFO] PasswordFieldConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.textfield.AbstractTextFieldState as a bean[INFO] Visiting InlineDateFieldConnector with ConnectorInitVisitor[INFO] InlineDateFieldConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.datefield.InlineDateFieldState as a bean[INFO] Visiting PanelConnector with ConnectorInitVisitor[INFO] PanelConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.panel.PanelState as a bean[INFO] Visiting CustomFieldConnector with ConnectorInitVisitor[INFO] CustomFieldConnector will be in the eager bundle[INFO] Visiting DragAndDropWrapperConnector with ConnectorInitVisitor[INFO] DragAndDropWrapperConnector will be in the eager bundle[INFO] Visiting LinkConnector with ConnectorInitVisitor[INFO] LinkConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.link.LinkState as a bean[INFO] Visiting BrowserWindowOpenerConnector with ConnectorInitVisitor[INFO] BrowserWindowOpenerConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.BrowserWindowOpenerState as a bean[INFO] Visiting ImageConnector with ConnectorInitVisitor[INFO] ImageConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.image.ImageState as a bean[INFO] Visiting LabelConnector with ConnectorInitVisitor[INFO] LabelConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.label.LabelState as a bean[INFO] Will serialize class com.vaadin.shared.ui.label.ContentMode as an enum[INFO] Visiting BrowserFrameConnector with ConnectorInitVisitor[INFO] BrowserFrameConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.browserframe.BrowserFrameState as a bean[INFO] Visiting TabsheetConnector with ConnectorInitVisitor[INFO] TabsheetConnector will be in the eager bundle[INFO] Visiting TabsheetConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.tabsheet.TabsheetConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.tabsheet.TabsheetState as a bean[INFO] Visiting TreeConnector with ConnectorInitVisitor[INFO] TreeConnector will be in the eager bundle[INFO] Visiting TreeConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.tree.TreeConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.tree.TreeState as a bean[INFO] Visiting NativeButtonConnector with ConnectorInitVisitor[INFO] NativeButtonConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.button.NativeButtonState as a bean[INFO] Visiting PopupDateFieldConnector with ConnectorInitVisitor[INFO] PopupDateFieldConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.datefield.PopupDateFieldState as a bean[INFO] Visiting EmbeddedConnector with ConnectorInitVisitor[INFO] EmbeddedConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.embedded.EmbeddedState as a bean[INFO] Visiting FlashConnector with ConnectorInitVisitor[INFO] FlashConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.flash.FlashState as a bean[INFO] Visiting CssLayoutConnector with ConnectorInitVisitor[INFO] CssLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.csslayout.CssLayoutState as a bean[INFO] Visiting AudioConnector with ConnectorInitVisitor[INFO] AudioConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.AbstractMediaState as a bean[INFO] Visiting VideoConnector with ConnectorInitVisitor[INFO] VideoConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.video.VideoState as a bean[INFO] Visiting CustomLayoutConnector with ConnectorInitVisitor[INFO] CustomLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.customlayout.CustomLayoutState as a bean[INFO] Visiting AbsoluteLayoutConnector with ConnectorInitVisitor[INFO] AbsoluteLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.absolutelayout.AbsoluteLayoutState as a bean[INFO] Visiting HorizontalLayoutConnector with ConnectorInitVisitor[INFO] HorizontalLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.orderedlayout.HorizontalLayoutState as a bean[INFO] Visiting TextFieldConnector with ConnectorInitVisitor[INFO] TextFieldConnector will be in the eager bundle[INFO] Visiting ListSelectConnector with ConnectorInitVisitor[INFO] ListSelectConnector will be in the eager bundle[INFO] Visiting FileDownloaderConnector with ConnectorInitVisitor[INFO] FileDownloaderConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.communication.SharedState as a bean[INFO] Visiting ButtonConnector with ConnectorInitVisitor[INFO] ButtonConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.button.ButtonState as a bean[INFO] Visiting GridLayoutConnector with ConnectorInitVisitor[INFO] GridLayoutConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.gridlayout.GridLayoutState as a bean[INFO] Will serialize class com.vaadin.shared.ui.gridlayout.GridLayoutState.ChildComponentData as a bean[INFO] Visiting TwinColSelectConnector with ConnectorInitVisitor[INFO] TwinColSelectConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.twincolselect.TwinColSelectState as a bean[INFO] Visiting JavaScriptExtension with ConnectorInitVisitor[INFO] JavaScriptExtension will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.JavaScriptExtensionState as a bean[INFO] Visiting FormConnector with ConnectorInitVisitor[INFO] FormConnector will be in the eager bundle[INFO] Visiting FormConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.form.FormConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.form.FormState as a bean[INFO] Visiting TextAreaConnector with ConnectorInitVisitor[INFO] TextAreaConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.textarea.TextAreaState as a bean[INFO] Visiting UploadConnector with ConnectorInitVisitor[INFO] UploadConnector will be in the eager bundle[INFO] Visiting FormLayoutConnector with ConnectorInitVisitor[INFO] FormLayoutConnector will be in the eager bundle[INFO] Visiting FormLayoutConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.formlayout.FormLayoutConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.orderedlayout.AbstractOrderedLayoutState as a bean[INFO] Visiting JavaScriptManagerConnector with ConnectorInitVisitor[INFO] JavaScriptManagerConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.extension.javascriptmanager.JavaScriptManagerState as a bean[INFO] Visiting ProgressIndicatorConnector with ConnectorInitVisitor[INFO] ProgressIndicatorConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.progressindicator.ProgressIndicatorState as a bean[INFO] Visiting SliderConnector with ConnectorInitVisitor[INFO] SliderConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.slider.SliderState as a bean[INFO] Will serialize class com.vaadin.shared.ui.slider.SliderOrientation as an enum[INFO] Visiting ComboBoxConnector with ConnectorInitVisitor[INFO] ComboBoxConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.combobox.ComboBoxState as a bean[INFO] Visiting AccordionConnector with ConnectorInitVisitor[INFO] AccordionConnector will be in the eager bundle[INFO] Visiting CheckBoxConnector with ConnectorInitVisitor[INFO] CheckBoxConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.checkbox.CheckBoxState as a bean[INFO] Visiting VerticalSplitPanelConnector with ConnectorInitVisitor[INFO] VerticalSplitPanelConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.splitpanel.VerticalSplitPanelState as a bean[INFO] Will serialize class com.vaadin.shared.ui.splitpanel.AbstractSplitPanelState.SplitterState as a bean[INFO] Visiting JavaScriptComponentConnector with ConnectorInitVisitor[INFO] JavaScriptComponentConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.JavaScriptComponentState as a bean[INFO] Visiting OptionGroupConnector with ConnectorInitVisitor[INFO] OptionGroupConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.optiongroup.OptionGroupState as a bean[INFO] Visiting PopupViewConnector with ConnectorInitVisitor[INFO] PopupViewConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.popupview.PopupViewState as a bean[INFO] Visiting TreeTableConnector with ConnectorInitVisitor[INFO] TreeTableConnector will be in the eager bundle[INFO] Visiting TreeTableConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.treetable.TreeTableConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.treetable.TreeTableState as a bean[INFO] Visiting MenuBarConnector with ConnectorInitVisitor[INFO] MenuBarConnector will be in the eager bundle[INFO] Visiting MenuBarConnector with WidgetInitVisitor[INFO] [WARN] com.vaadin.client.ui.menubar.MenuBarConnector has overridden getTooltipInfo[INFO] Will serialize class com.vaadin.shared.ui.menubar.MenuBarState as a bean[INFO] Visiting HorizontalSplitPanelConnector with ConnectorInitVisitor[INFO] HorizontalSplitPanelConnector will be in the eager bundle[INFO] Will serialize class com.vaadin.shared.ui.splitpanel.HorizontalSplitPanelState as a bean[INFO] Will serialize class com.vaadin.shared.MouseEventDetails as a bean[INFO] Will serialize class com.vaadin.shared.MouseEventDetails.MouseButton as an enum[INFO] Populating RichTextAreaConnector bundle[INFO] Visiting RichTextAreaConnector with ConnectorInitVisitor[INFO] RichTextAreaConnector will be in the RichTextAreaConnector bundle[INFO] Populating ColorPickerGradientConnector bundle[INFO] Visiting ColorPickerGradientConnector with ConnectorInitVisitor[INFO] ColorPickerGradientConnector will be in the ColorPickerGradientConnector bundle[INFO] Will serialize class com.vaadin.shared.ui.colorpicker.ColorPickerGradientState as a bean[INFO] Populating ColorPickerAreaConnector bundle[INFO] Visiting ColorPickerAreaConnector with ConnectorInitVisitor[INFO] ColorPickerAreaConnector will be in the ColorPickerAreaConnector bundle[INFO] Will serialize class com.vaadin.shared.ui.colorpicker.ColorPickerState as a bean[INFO] Populating ColorPickerConnector bundle[INFO] Visiting ColorPickerConnector with ConnectorInitVisitor[INFO] ColorPickerConnector will be in the ColorPickerConnector bundle[INFO] Will serialize class com.vaadin.shared.ui.colorpicker.ColorPickerState as a bean[INFO] Populating ColorPickerGridConnector bundle[INFO] Visiting ColorPickerGridConnector with ConnectorInitVisitor[INFO] ColorPickerGridConnector will be in the ColorPickerGridConnector bundle[INFO] Will serialize class com.vaadin.shared.ui.colorpicker.ColorPickerGridState as a bean[INFO] Will serialize java.lang.String[] as an array[INFO] Computing all possible rebind results for &apos;com.vaadin.client.ui.dd.VAcceptCriterionFactory&apos;[INFO] Rebinding com.vaadin.client.ui.dd.VAcceptCriterionFactory[INFO] Invoking generator com.vaadin.server.widgetsetutils.AcceptCriteriaFactoryGenerator[INFO] Detecting available criteria ...[INFO] creating mapping for com.vaadin.ui.AbstractSelect.TargetItemIs[INFO] creating mapping for com.vaadin.ui.Table.TableDropCriterion[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.SourceIs[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.SourceIsTarget[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.AcceptAll[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.Not[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.And[INFO] creating mapping for com.vaadin.ui.AbstractSelect.AcceptItem[INFO] creating mapping for com.vaadin.ui.Tree.TreeDropCriterion[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.ServerSideCriterion[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.Or[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.TargetDetailIs[INFO] creating mapping for com.vaadin.ui.Tree.TargetInSubtree[INFO] creating mapping for com.vaadin.event.dd.acceptcriteria.ContainsDataFlavor[INFO] Done. (0seconds)[INFO] Compiling 6 permutations[INFO] Compiling permutation 2...[INFO] Process output[INFO] Compiling[INFO] Compiling permutation 1...[INFO] Process output[INFO] Compiling[INFO] Compiling permutation 3...[INFO] Process output[INFO] Compiling[INFO] Compiling permutation 0...[INFO] [ERROR] Unexpected internal compiler error[INFO] java.lang.RuntimeException: Unable to write to byte cache[INFO] at com.google.gwt.dev.util.DiskCache.writeByteArray(DiskCache.java:219)[INFO] at com.google.gwt.core.ext.linker.SyntheticArtifact.&lt;init&gt;(SyntheticArtifact.java:49)[INFO] at com.google.gwt.core.ext.linker.SyntheticArtifact.&lt;init&gt;(SyntheticArtifact.java:41)[INFO] at com.google.gwt.soyc.io.ArtifactsOutputDirectory$OutputStreamForArtifact.close(ArtifactsOutputDirectory.java:52)[INFO] at sun.nio.cs.StreamEncoder.implClose(Unknown Source)[INFO] at sun.nio.cs.StreamEncoder.close(Unknown Source)[INFO] at java.io.OutputStreamWriter.close(Unknown Source)[INFO] at java.io.BufferedWriter.close(Unknown Source)[INFO] at java.io.PrintWriter.close(Unknown Source)[INFO] at com.google.gwt.soyc.MakeTopLevelHtmlForPerm.makeCodeTypeClassesHtmls(MakeTopLevelHtmlForPerm.java:805)[INFO] at com.google.gwt.soyc.SoycDashboard.makeHTMLFiles(SoycDashboard.java:435)[INFO] at com.google.gwt.soyc.SoycDashboard.generateForOnePermutation(SoycDashboard.java:340)[INFO] at com.google.gwt.dev.jjs.JavaToJavaScriptCompiler.makeSoycArtifacts(JavaToJavaScriptCompiler.java:1230)[INFO] at com.google.gwt.dev.jjs.JavaToJavaScriptCompiler.compilePermutation(JavaToJavaScriptCompiler.java:503)[INFO] at com.google.gwt.dev.jjs.UnifiedAst.compilePermutation(UnifiedAst.java:134)[INFO] at com.google.gwt.dev.CompilePerms.compile(CompilePerms.java:195)[INFO] at com.google.gwt.dev.CompilePermsServer.compilePermutation(CompilePermsServer.java:305)[INFO] at com.google.gwt.dev.CompilePermsServer.run(CompilePermsServer.java:274)[INFO] at com.google.gwt.dev.CompilePermsServer.main(CompilePermsServer.java:237)[INFO] Caused by: java.io.IOException: ���̿ռ䲻�㡣[INFO] at java.io.RandomAccessFile.writeBytes(Native Method)[INFO] at java.io.RandomAccessFile.write(Unknown Source)[INFO] at com.google.gwt.dev.util.DiskCache.writeByteArray(DiskCache.java:216)[INFO] ... 18 more[INFO] [ERROR] Error from external worker[INFO] com.google.gwt.core.ext.UnableToCompleteException: (see previous log entries)[INFO] at com.google.gwt.dev.javac.CompilationProblemReporter.logAndTranslateException(CompilationProblemReporter.java:96)[INFO] at com.google.gwt.dev.jjs.JavaToJavaScriptCompiler.compilePermutation(JavaToJavaScriptCompiler.java:523)[INFO] at com.google.gwt.dev.jjs.UnifiedAst.compilePermutation(UnifiedAst.java:134)[INFO] at com.google.gwt.dev.CompilePerms.compile(CompilePerms.java:195)[INFO] at com.google.gwt.dev.CompilePermsServer.compilePermutation(CompilePermsServer.java:305)[INFO] at com.google.gwt.dev.CompilePermsServer.run(CompilePermsServer.java:274)[INFO] at com.google.gwt.dev.CompilePermsServer.main(CompilePermsServer.java:237)[INFO] [ERROR] Unrecoverable exception, shutting down[INFO] com.google.gwt.core.ext.UnableToCompleteException: (see previous log entries)[INFO] at com.google.gwt.dev.ExternalPermutationWorkerFactory$ExternalPermutationWorker.compile(ExternalPermutationWorkerFactory.java:155)[INFO] at com.google.gwt.dev.PermutationWorkerFactory$Manager$WorkerThread.run(PermutationWorkerFactory.java:73)[INFO] at java.lang.Thread.run(Unknown Source)[INFO] [ERROR] Not all permutation were compiled , completed (0/6)[INFO] [WARN] Lost communication with remote process[INFO] java.net.SocketException: socket closed[INFO] at java.net.SocketInputStream.socketRead0(Native Method)[INFO] at java.net.SocketInputStream.read(Unknown Source)[INFO] at java.net.SocketInputStream.read(Unknown Source)[INFO] at java.io.ObjectInputStream$PeekInputStream.peek(Unknown Source)[INFO] at java.io.ObjectInputStream$BlockDataInputStream.peek(Unknown Source)[INFO] at java.io.ObjectInputStream$BlockDataInputStream.peekByte(Unknown Source)[INFO] at java.io.ObjectInputStream.readObject0(Unknown Source)[INFO] at java.io.ObjectInputStream.readObject(Unknown Source)[INFO] at com.google.gwt.dev.ExternalPermutationWorkerFactory$ExternalPermutationWorker.compile(ExternalPermutationWorkerFactory.java:152)[INFO] at com.google.gwt.dev.PermutationWorkerFactory$Manager$WorkerThread.run(PermutationWorkerFactory.java:73)[INFO] at java.lang.Thread.run(Unknown Source)[INFO] [WARN] Lost communication with remote process[INFO] java.net.SocketException: socket closed[INFO] at java.net.SocketInputStream.socketRead0(Native Method)[INFO] at java.net.SocketInputStream.read(Unknown Source)[INFO] at java.net.SocketInputStream.read(Unknown Source)[INFO] at java.io.ObjectInputStream$PeekInputStream.peek(Unknown Source)[INFO] at java.io.ObjectInputStream$BlockDataInputStream.peek(Unknown Source)[INFO] at java.io.ObjectInputStream$BlockDataInputStream.peekByte(Unknown Source)[INFO] at java.io.ObjectInputStream.readObject0(Unknown Source)[INFO] at java.io.ObjectInputStream.readObject(Unknown Source)[INFO] at com.google.gwt.dev.ExternalPermutationWorkerFactory$ExternalPermutationWorker.compile(ExternalPermutationWorkerFactory.java:152)[INFO] at com.google.gwt.dev.PermutationWorkerFactory$Manager$WorkerThread.run(PermutationWorkerFactory.java:73)[INFO] at java.lang.Thread.run(Unknown Source)[INFO] ------------------------------------------------------------------------[INFO] BUILD FAILURE[INFO] ------------------------------------------------------------------------[INFO] Total time: 1:49.312s[INFO] Finished at: Thu Feb 21 23:06:18 CST 2013[INFO] Final Memory: 7M/18M[INFO] ------------------------------------------------------------------------[ERROR] Failed to execute goal com.vaadin:vaadin-maven-plugin:7.0.1:compile (default-cli) on project Test: Command [[[ERROR] C:\Program Files\Java\jre6\bin\java -Xmx512M -Xss1024k -classpath D:\development\workspace\Test\target\classes;D:\development\workspace\Test\src\main\java;D:\development\workspace\Test\src\main\resources;D:\development\lib\com\vaadin\vaadin-server\7.0.1\vaadin-server-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared\7.0.1\vaadin-shared-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared-deps\1.0.2\vaadin-shared-deps-1.0.2.jar;D:\development\lib\com\vaadin\vaadin-theme-compiler\7.0.1\vaadin-theme-compiler-7.0.1.jar;D:\development\lib\org\apache\commons\commons-jexl\2.1.1\commons-jexl-2.1.1.jar;D:\development\lib\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;D:\development\lib\net\sourceforge\cssparser\cssparser\0.9.5\cssparser-0.9.5.jar;D:\development\lib\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;D:\development\lib\org\jsoup\jsoup\1.6.3\jsoup-1.6.3.jar;D:\development\lib\com\vaadin\vaadin-client-compiled\7.0.1\vaadin-client-compiled-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-client\7.0.1\vaadin-client-7.0.1.jar;D:\development\lib\org\w3c\css\sac\1.3\sac-1.3.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA-sources.jar;D:\development\lib\com\vaadin\vaadin-themes\7.0.1\vaadin-themes-7.0.1.jar;D:\development\lib\javax\servlet\servlet-api\2.4\servlet-api-2.4.jar;D:\development\lib\com\vaadin\vaadin-client\7.0.1\vaadin-client-7.0.1.jar;D:\development\lib\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;D:\development\lib\commons-digester\commons-digester\1.6\commons-digester-1.6.jar;D:\development\lib\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;D:\development\lib\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;D:\development\lib\commons-collections\commons-collections\3.2\commons-collections-3.2.jar;D:\development\lib\xml-apis\xml-apis\1.3.02\xml-apis-1.3.02.jar;D:\development\lib\oro\oro\2.0.8\oro-2.0.8.jar;D:\development\lib\com\vaadin\vaadin-client-compiler\7.0.1\vaadin-client-compiler-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared\7.0.1\vaadin-shared-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared-deps\1.0.2\vaadin-shared-deps-1.0.2.jar;D:\development\lib\com\vaadin\vaadin-server\7.0.1\vaadin-server-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-theme-compiler\7.0.1\vaadin-theme-compiler-7.0.1.jar;D:\development\lib\org\apache\commons\commons-jexl\2.1.1\commons-jexl-2.1.1.jar;D:\development\lib\org\w3c\css\sac\1.3\sac-1.3.jar;D:\development\lib\net\sourceforge\cssparser\cssparser\0.9.5\cssparser-0.9.5.jar;D:\development\lib\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;D:\development\lib\org\jsoup\jsoup\1.6.3\jsoup-1.6.3.jar;D:\development\lib\org\codehaus\plexus\plexus-compiler-javac\1.5.3\plexus-compiler-javac-1.5.3.jar;D:\development\lib\org\codehaus\plexus\plexus-utils\2.0.5\plexus-utils-2.0.5.jar;D:\development\lib\org\codehaus\plexus\plexus-compiler-api\1.5.3\plexus-compiler-api-1.5.3.jar;D:\development\lib\org\codehaus\plexus\plexus-container-default\1.0-alpha-8\plexus-container-default-1.0-alpha-8.jar;D:\development\lib\junit\junit\4.8.1\junit-4.8.1.jar;D:\development\lib\org\apache\maven\doxia\doxia-logging-api\1.1.4\doxia-logging-api-1.1.4.jar;D:\development\lib\org\codehaus\plexus\plexus-interpolation\1.13\plexus-interpolation-1.13.jar;D:\development\lib\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;D:\development\lib\org\apache\maven\doxia\doxia-sink-api\1.1.4\doxia-sink-api-1.1.4.jar;D:\development\lib\org\apache\maven\maven-archiver\2.4.1\maven-archiver-2.4.1.jar;D:\development\lib\org\apache\maven\maven-artifact\2.0.6\maven-artifact-2.0.6.jar;D:\development\lib\org\apache\maven\maven-model\2.0.6\maven-model-2.0.6.jar;D:\development\lib\org\codehaus\plexus\plexus-archiver\1.0-alpha-9\plexus-archiver-1.0-alpha-9.jar;D:\development\lib\org\codehaus\plexus\plexus-io\1.0-alpha-1\plexus-io-1.0-alpha-1.jar;D:\development\lib\jakarta-regexp\jakarta-regexp\1.4\jakarta-regexp-1.4.jar;D:\development\lib\org\apache\bcel\bcel\5.2\bcel-5.2.jar;D:\development\lib\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;D:\development\lib\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\development\lib\jdom\jdom\1.0\jdom-1.0.jar;D:\development\lib\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;D:\development\lib\xom\xom\1.0\xom-1.0.jar;D:\development\lib\xalan\xalan\2.6.0\xalan-2.6.0.jar;D:\development\lib\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;D:\development\lib\org\apache\maven\surefire\surefire-api\2.4.3\surefire-api-2.4.3.jar;D:\development\lib\org\apache\velocity\velocity\1.5\velocity-1.5.jar;D:\development\lib\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;D:\development\lib\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\development\lib\commons-codec\commons-codec\1.3\commons-codec-1.3.jar;D:\development\lib\org\codehaus\plexus\plexus-component-api\1.0-alpha-15\plexus-component-api-1.0-alpha-15.jar;D:\development\lib\org\codehaus\plexus\plexus-classworlds\1.2-alpha-6\plexus-classworlds-1.2-alpha-6.jar;D:\development\lib\com\vaadin\vaadin-maven-plugin\7.0.1\vaadin-maven-plugin-7.0.1.jar;D:\development\lib\org\apache\maven\maven-project\2.0.9\maven-project-2.0.9.jar;D:\development\lib\org\apache\maven\maven-settings\2.0.10\maven-settings-2.0.10.jar;D:\development\lib\org\apache\maven\maven-profile\2.0.10\maven-profile-2.0.10.jar;D:\development\lib\org\apache\maven\maven-artifact-manager\2.0.10\maven-artifact-manager-2.0.10.jar;D:\development\lib\org\apache\maven\maven-repository-metadata\2.0.10\maven-repository-metadata-2.0.10.jar;D:\development\lib\org\apache\maven\wagon\wagon-provider-api\1.0-beta-2\wagon-provider-api-1.0-beta-2.jar;D:\development\lib\org\apache\maven\maven-plugin-registry\2.0.10\maven-plugin-registry-2.0.10.jar;D:\development\lib\org\apache\maven\maven-plugin-api\2.0.9\maven-plugin-api-2.0.9.jar;D:\development\lib\org\apache\maven\reporting\maven-reporting-impl\2.1\maven-reporting-impl-2.1.jar;D:\development\lib\org\apache\maven\doxia\doxia-core\1.1.2\doxia-core-1.1.2.jar;D:\development\lib\org\apache\maven\doxia\doxia-site-renderer\1.1.4\doxia-site-renderer-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-decoration-model\1.1.4\doxia-decoration-model-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-module-xhtml\1.1.4\doxia-module-xhtml-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-module-fml\1.1.4\doxia-module-fml-1.1.4.jar;D:\development\lib\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;D:\development\lib\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;D:\development\lib\commons-validator\commons-validator\1.2.0\commons-validator-1.2.0.jar;D:\development\lib\org\springframework\spring-core\3.0.5.RELEASE\spring-core-3.0.5.RELEASE.jar;D:\development\lib\org\springframework\spring-asm\3.0.5.RELEASE\spring-asm-3.0.5.RELEASE.jar;D:\development\lib\com\thoughtworks\qdox\qdox\1.12\qdox-1.12.jar;D:\development\lib\freemarker\freemarker\2.3.6\freemarker-2.3.6.jar;D:\development\lib\velocity\velocity\1.4\velocity-1.4.jar;D:\development\lib\velocity\velocity-dep\1.4\velocity-dep-1.4.jar;D:\development\lib\org\mortbay\jetty\jetty-util\6.1.11\jetty-util-6.1.11.jar;D:\development\lib\org\mortbay\jetty\servlet-api-2.5\6.1.11\servlet-api-2.5-6.1.11.jar;D:\development\lib\org\mortbay\jetty\jetty\6.1.11\jetty-6.1.11.jar;D:\development\lib\org\apache\maven\surefire\surefire-booter\2.4.3\surefire-booter-2.4.3.jar;D:\development\lib\org\jdesktop\swing-worker\1.1\swing-worker-1.1.jar;D:\development\lib\org\jdom\jdom\1.1\jdom-1.1.jar;D:\development\lib\org\apache\james\apache-mime4j\0.6\apache-mime4j-0.6.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA-sources.jar;D:\development\lib\commons-io\commons-io\2.0.1\commons-io-2.0.1.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\development\lib\ant\ant\1.6.5\ant-1.6.5.jar;D:\development\lib\ant\ant-launcher\1.6.5\ant-launcher-1.6.5.jar;D:\development\lib\com\vaadin\vaadin-client-compiler\7.0.1\vaadin-client-compiler-7.0.1.jar;D:\development\lib\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;D:\development\lib\commons-digester\commons-digester\1.6\commons-digester-1.6.jar;D:\development\lib\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;D:\development\lib\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;D:\development\lib\commons-collections\commons-collections\3.2\commons-collections-3.2.jar;D:\development\lib\xml-apis\xml-apis\1.3.02\xml-apis-1.3.02.jar;D:\development\lib\oro\oro\2.0.8\oro-2.0.8.jar;D:\development\lib\org\codehaus\plexus\plexus-compiler-javac\1.5.3\plexus-compiler-javac-1.5.3.jar;D:\development\lib\org\codehaus\plexus\plexus-utils\2.0.5\plexus-utils-2.0.5.jar;D:\development\lib\org\codehaus\plexus\plexus-compiler-api\1.5.3\plexus-compiler-api-1.5.3.jar;D:\development\lib\org\codehaus\plexus\plexus-container-default\1.0-alpha-8\plexus-container-default-1.0-alpha-8.jar;D:\development\lib\junit\junit\4.8.1\junit-4.8.1.jar;D:\development\lib\org\apache\maven\doxia\doxia-logging-api\1.1.4\doxia-logging-api-1.1.4.jar;D:\development\lib\org\codehaus\plexus\plexus-interpolation\1.13\plexus-interpolation-1.13.jar;D:\development\lib\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;D:\development\lib\org\apache\maven\doxia\doxia-sink-api\1.1.4\doxia-sink-api-1.1.4.jar;D:\development\lib\org\apache\maven\maven-archiver\2.4.1\maven-archiver-2.4.1.jar;D:\development\lib\org\apache\maven\maven-artifact\2.0.6\maven-artifact-2.0.6.jar;D:\development\lib\org\apache\maven\maven-model\2.0.6\maven-model-2.0.6.jar;D:\development\lib\org\codehaus\plexus\plexus-archiver\1.0-alpha-9\plexus-archiver-1.0-alpha-9.jar;D:\development\lib\org\codehaus\plexus\plexus-io\1.0-alpha-1\plexus-io-1.0-alpha-1.jar;D:\development\lib\jakarta-regexp\jakarta-regexp\1.4\jakarta-regexp-1.4.jar;D:\development\lib\org\apache\bcel\bcel\5.2\bcel-5.2.jar;D:\development\lib\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;D:\development\lib\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\development\lib\jdom\jdom\1.0\jdom-1.0.jar;D:\development\lib\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;D:\development\lib\xom\xom\1.0\xom-1.0.jar;D:\development\lib\xalan\xalan\2.6.0\xalan-2.6.0.jar;D:\development\lib\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;D:\development\lib\org\apache\maven\surefire\surefire-api\2.4.3\surefire-api-2.4.3.jar;D:\development\lib\net\sourceforge\cssparser\cssparser\0.9.5\cssparser-0.9.5.jar;D:\development\lib\org\w3c\css\sac\1.3\sac-1.3.jar;D:\development\lib\org\apache\velocity\velocity\1.5\velocity-1.5.jar;D:\development\lib\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;D:\development\lib\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\development\lib\commons-codec\commons-codec\1.3\commons-codec-1.3.jar;D:\development\lib\org\codehaus\plexus\plexus-component-api\1.0-alpha-15\plexus-component-api-1.0-alpha-15.jar;D:\development\lib\org\codehaus\plexus\plexus-classworlds\1.2-alpha-6\plexus-classworlds-1.2-alpha-6.jar;D:\development\lib\com\vaadin\vaadin-maven-plugin\7.0.1\vaadin-maven-plugin-7.0.1.jar;D:\development\lib\org\apache\maven\maven-project\2.0.9\maven-project-2.0.9.jar;D:\development\lib\org\apache\maven\maven-settings\2.0.10\maven-settings-2.0.10.jar;D:\development\lib\org\apache\maven\maven-profile\2.0.10\maven-profile-2.0.10.jar;D:\development\lib\org\apache\maven\maven-artifact-manager\2.0.10\maven-artifact-manager-2.0.10.jar;D:\development\lib\org\apache\maven\maven-repository-metadata\2.0.10\maven-repository-metadata-2.0.10.jar;D:\development\lib\org\apache\maven\wagon\wagon-provider-api\1.0-beta-2\wagon-provider-api-1.0-beta-2.jar;D:\development\lib\org\apache\maven\maven-plugin-registry\2.0.10\maven-plugin-registry-2.0.10.jar;D:\development\lib\org\apache\maven\maven-plugin-api\2.0.9\maven-plugin-api-2.0.9.jar;D:\development\lib\org\apache\maven\reporting\maven-reporting-impl\2.1\maven-reporting-impl-2.1.jar;D:\development\lib\org\apache\maven\doxia\doxia-core\1.1.2\doxia-core-1.1.2.jar;D:\development\lib\org\apache\maven\doxia\doxia-site-renderer\1.1.4\doxia-site-renderer-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-decoration-model\1.1.4\doxia-decoration-model-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-module-xhtml\1.1.4\doxia-module-xhtml-1.1.4.jar;D:\development\lib\org\apache\maven\doxia\doxia-module-fml\1.1.4\doxia-module-fml-1.1.4.jar;D:\development\lib\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;D:\development\lib\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;D:\development\lib\commons-validator\commons-validator\1.2.0\commons-validator-1.2.0.jar;D:\development\lib\org\springframework\spring-core\3.0.5.RELEASE\spring-core-3.0.5.RELEASE.jar;D:\development\lib\org\springframework\spring-asm\3.0.5.RELEASE\spring-asm-3.0.5.RELEASE.jar;D:\development\lib\com\thoughtworks\qdox\qdox\1.12\qdox-1.12.jar;D:\development\lib\freemarker\freemarker\2.3.6\freemarker-2.3.6.jar;D:\development\lib\com\vaadin\vaadin-client\7.0.1\vaadin-client-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared\7.0.1\vaadin-shared-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-shared-deps\1.0.2\vaadin-shared-deps-1.0.2.jar;D:\development\lib\com\vaadin\vaadin-server\7.0.1\vaadin-server-7.0.1.jar;D:\development\lib\com\vaadin\vaadin-theme-compiler\7.0.1\vaadin-theme-compiler-7.0.1.jar;D:\development\lib\org\apache\commons\commons-jexl\2.1.1\commons-jexl-2.1.1.jar;D:\development\lib\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;D:\development\lib\org\jsoup\jsoup\1.6.3\jsoup-1.6.3.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\development\lib\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA-sources.jar;D:\development\lib\velocity\velocity\1.4\velocity-1.4.jar;D:\development\lib\velocity\velocity-dep\1.4\velocity-dep-1.4.jar;D:\development\lib\org\mortbay\jetty\jetty-util\6.1.11\jetty-util-6.1.11.jar;D:\development\lib\org\mortbay\jetty\servlet-api-2.5\6.1.11\servlet-api-2.5-6.1.11.jar;D:\development\lib\org\mortbay\jetty\jetty\6.1.11\jetty-6.1.11.jar;D:\development\lib\org\apache\maven\surefire\surefire-booter\2.4.3\surefire-booter-2.4.3.jar;D:\development\lib\org\jdesktop\swing-worker\1.1\swing-worker-1.1.jar;D:\development\lib\org\jdom\jdom\1.1\jdom-1.1.jar;D:\development\lib\org\apache\james\apache-mime4j\0.6\apache-mime4j-0.6.jar;D:\development\lib\commons-io\commons-io\2.0.1\commons-io-2.0.1.jar;D:\development\lib\ant\ant\1.6.5\ant-1.6.5.jar;D:\development\lib\ant\ant-launcher\1.6.5\ant-launcher-1.6.5.jar com.google.gwt.dev.Compiler -logLevel INFO -style OBF -war D:\development\workspace\Test\src\main\webapp\VAADIN\widgetsets -localWorkers 4 -strict -XfragmentCount -1 -extra D:\development\workspace\Test\target\extra -compileReport -gen D:\development\workspace\Test\target\.generated cn.nh121.AppWidgetSet[ERROR] ]] failed with status 1[ERROR] -&gt; [Help 1][ERROR][ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.[ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR][ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException 好吧，输出信息非常长，从中我留意到程序抛出的一个异常：java.lang.RuntimeException: Unable to write to byte cache，一番Google之后也找不到解决方法。这就奇怪了，今天白天我在公司明明还能编译成功的，怎么回到家就不行了呢？最后细想了一下公司机器和家里机器的区别，开始怀疑是临时空间的问题。家里的机器装了一个叫Vsuite Ramdisk的软件，将4G内存里的600M划出来作为Ramdisk，然后把环境变量中的TEMP和TMP变量都指向这个Ramdisk盘，后来在编译的时候观察这个盘，果然，容量降到接近没有的时候就编译中断了。看来问题所在就是临时空间不够，于是赶紧把环境变量修改为原来的位置，再编译，Done！ 总结问题虽然不大，但也卡了我接近一晚的时间，看来有时候有些设置也不是随便可以乱改啊。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux Mint安装日记]]></title>
      <url>https://goldymark.github.io/2012/10/23/linux-mint%E5%AE%89%E8%A3%85%E6%97%A5%E8%AE%B0/</url>
      <content type="text"><![CDATA[Linux minthttp://www.linuxmint.com/ 关于Mint的简介我就不多说了，跟Ubuntu差不多吧，但感觉上没有Ubuntu花哨，这就是我选择Mint的原因。Ubuntu有个工具叫wubi，wubi就是可以在windows下安装ubuntu的工具，不会对现有的windows系统产生任何影响（装完后的linux就是一个文件夹，想删除linux就直接删除文件夹即可）。Mint也有个类似的工具，叫Mint4Win。Mint 13有4种不同桌面版本，分别是Mate、Cinnamon、KDE和XFCE。 KDE: 个人感觉KDE4比较不稳定，容易崩溃（之前装OpenSUSE12.2的时候经常崩溃，故无好感），而且也比较花哨，不怎么好用； Cinnamon: 不怎么熟悉，试用了1、2次之后有点不习惯，所以弃用； Mate: 基于Gnome2做成的桌面系统，个人比较喜欢Gnome2的风格，所以最后选择了Mate版本； XFCE: 还不错，可惜没有自带Mint4Win工具，所以暂时不用（理论上Mint4Win也可以安装的）； 去官网的下载页面可以看出，Mint4Win只支持Mate和Cinnamon的64bit版本，32bit版本不支持（虽然下载的iso镜像有这个软件，但安装过程会报错），后来搜出了一篇文章介绍如何用Mint4Win安装32bit版本的Mate和Cinnamon（个人猜测KDE和XFCE版本也可以，但没试过）。文章地址：http://forums.linuxmint.com/viewtopic.php?f=42&amp;t=106922恩，英文的……以下操作我均在Vmware虚拟机进行的。虚拟机环境如下：60G硬盘（10+10+40）【按Windows分区】，1G内存，已安装好的XP。准备工作：下载Mate或Cinnamon的32bit镜像，用虚拟机载入镜像，打开虚拟机，从光盘运行，然后在启动菜单选择Star Linux Mint，进入live版Mint。我试图用简单的语言解释这篇文章吧。我直接从文章的How to solve the problem开始。打开终端窗口，输入以下命令【注意：Linux命令区分大小写的】：命令：12cd /cdrom/casperls -al 解释：你将看到vmlinuz和initrd.lz这两个文件。这两个文件会在Mint4win安装系统的第一阶段复制到Windows机器下。我们要修复的就是这个initrd.lz。回到home文件夹下，新建一个x文件夹（或其他名字，随意）。 命令：123cd /homemkdir xcd x 解释：将initrd.lz解压到x文件夹下。 命令：1234zcat /cdrom/casper/initrd.lz | cpio -i -d //key!cd sbinls -al mount.ntf*file mount.ntf* 解释：后面两个命令会列出两个文件并且显示出他们是64位可执行程序，但实际上他们应该是32位可执行程序。 命令：12ls -al ../bin/ntfs-3gfile ../bin/ntfs-3g 解释：这两条命令会正确列出相同文件的32位版本，只是文件名稍稍不同。 关键命令：123cp ../bin/ntfs-3g mount.ntfs //key!cp ../bin/ntfs-3g mount.ntfs-3g （此处原文有误，已修正） //key!file mount.ntf* 解释：现在我们需要按整个子文件夹的结构重新打包创建一个新的initrd.lz文件，这些命令会在home文件夹下生成一个新的initrd.lz文件。 命令：1234cd ~/xfind . | cpio -o -H newc | gzip -9 &gt; ../initrd.lz //key!cdls -al 其实简单来说，就是把initrd.lz解压后，将bin文件夹下的ntfs-3g替换掉sbin文件夹下的mount.ntfs和mount.ntfs-3g这两个文件（但文件名仍然使用原来的文件名），然后再重新打包。 至此，一个新的initrd.lz已经出现在home文件夹下了，将这个文件保存到c盘或d盘下面（在linux里面要自己挂载对应分区），文章的下面我就不翻译了，都是比较浅显的操作。教程所说的办法其实就是在安装过程把这个initrd.lz文件替换掉，我觉得比较麻烦，索性就重新将initrd.lz替换掉iso镜像里面的同名文件算了，同时也要更新对应的md5码。所以，最后要替换掉镜像里面两个文件： /casper下的initrd.lz /md5sum.txt 其中md5sum.txt要修改一处地方（不建议用记事本操作，我是用EditPlus的），找个软件算出新生成的initrd.lz的md5码，然后搜索文档里面的initrd.lz那一行，将前面的md5码删掉，输入新算出的md5码，保存。最后保存iso文件即可（我是用UltraISO操作的）。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[一段关于搜索数组内连续满足某条件的数字的代码]]></title>
      <url>https://goldymark.github.io/2012/04/20/%E4%B8%80%E6%AE%B5%E5%85%B3%E4%BA%8E%E6%90%9C%E7%B4%A2%E6%95%B0%E7%BB%84%E5%86%85%E8%BF%9E%E7%BB%AD%E6%BB%A1%E8%B6%B3%E6%9F%90%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%95%B0%E5%AD%97%E7%9A%84%E4%BB%A3%E7%A0%81/</url>
      <content type="text"><![CDATA[周末趁有空，把某个程序的一个小算法问题解决了。 问题 有一组无序数字（整形，int），如何找出至少连续3个小于等于12的数字出来？例如：1,2,3,11,12,13,4,5,6,7,14,15,16,17,8,9,10,18,19,20输出：1,2,3；4,5,6,7；8,9,10（这里的“；”仅作区别几组输出结果显示之用） 因为周五太累了，本想一个简单的问题，发在群上等人解决了明天直接copy来用，不曾想反应冷淡。。。。 周六和周日用了一些时间去解决这个问题，包括精简代码。 在此感谢群里一位10的师弟，这个代码一定程度上参考了他的思想： 代码如下：12345678910111213141516171819202122232425262728/** *实现语言是java *变量i是数组游标； *变量start是"第一个"出现小于等于12的数字的数组下标，“第一个”是相对于前一个大于12的数字而言； *d是存储数字的数组，在测试过程中我用0~20的数字模拟这个数组； *list是ArrayList&lt;Integer&gt;，用来存放输出结果； */for (int i = 0 , start = 0 ; i &lt; d.length ; i++)//遍历数组&#123; if (d[i] &lt;= 12)//对大于12的数字跳过 &#123; if (i == 0 || d[i - 1] &gt; 12)//当d[i]为第一个数或d[i]的前一个数大于12时，记录游标start为i &#123; start = i;//将第一个小于等于12的数字的游标记录在start &#125; if (i + 1 == d.length || d[i + 1] &gt; 12)//如果数组游标到达数组末尾或d[i]的后一个数字大于12 &#123; if (i + 1 - start &gt;= 3)//判断数组游标与start游标的差是否大于等于3（判断是否为连续3个小于等于12的数） &#123; for (int k = start ; k &lt; i + 1 ; k++)//将结果用list保存起来 &#123; list.add(d[k]); &#125; list.add(";");//用分号区分不同组别的结果 &#125; &#125; &#125;&#125; 感想：问题虽然很简单，但思考过程还是有点意思的。但我只知道这段代码在java里可运行，其他语言没测试过。 个人觉得这段代码的特别之处就在于第5行和第9行的或运算上，假如把第5行或第9行各自的或运算条件调换的话，估计就要出问题了。java的或运算是这样的：a || b，如果条件a为true，则不需要判断条件b是否为true；同样，a &amp;&amp; b，如果条件a为false，也不需要判断条件b。（不知道其他语言是否也是这样定义） 当然，这个问题或许还可以用递归思想解决，但个人对递归思想没什么好感，也不熟，所以就没从这方面入手了。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[U盘启动制作方法]]></title>
      <url>https://goldymark.github.io/2011/09/02/u%E7%9B%98%E5%90%AF%E5%8A%A8%E5%88%B6%E4%BD%9C%E6%96%B9%E6%B3%95/</url>
      <content type="text"><![CDATA[这篇文章不好迁移，直接贴地址了。 http://jonson123654.blog.163.com/blog/static/25068844201182105436665/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[最近做的一些Java入门题]]></title>
      <url>https://goldymark.github.io/2010/02/06/%E6%9C%80%E8%BF%91%E5%81%9A%E7%9A%84%E4%B8%80%E4%BA%9Bjava%E5%85%A5%E9%97%A8%E9%A2%98/</url>
      <content type="text"><![CDATA[题目一 给定等式，其中每个字母代表一个数字，且不同数字对应不同字母。编程求出这些数字并且打出这个数字的算术计算竖式。定式123456&gt; A B C D E&gt; D F G&gt; + D F G&gt; ————————————&gt; X Y Z D E&gt; 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758import java.util.*; //Date类所需public class text4&#123;//此方法是用来判断A、B、C、D、E、F、G、X、Y、Z之间是否相等的，返回boolean值，相等就返回true，否则返回falsepublic static boolean b(int A,int B,int C,int D,int E,int F,int G,int X,int Y,int Z)&#123; int i[] = &#123;A,B,C,D,E,F,G,X,Y,Z&#125;; for (int m = 0;m &lt; 9;m++) &#123; for (int n = m;n &lt; 9;n++) &#123; if (i[m] == i[n+1]) return true; &#125; &#125; return false;&#125;//构造计算方法public static void count()&#123; int A,B,C,D,E,F = 5,G = 0,X,Y,Z,DFG,XYZDE; // 事先推算得F=5，G=0 boolean ex; Date d1 = new Date(); // 仅作计时用，代码运行前的时间，可去掉 for (int i = 11111;i &lt;= 89999;i++) // 因为A、B、C、D、E都不等于0，A不等于9，所以从for循环从11111开始，89999结束 &#123; for (int j = 1;j &lt; 10;j++) &#123; if (j == F) continue;// j其实就是D的值，D不等于5，所以可以节省一次循环次数 DFG = j*100+F*10+G;// 给DFG赋值，下同，不作说明 A = i/10000; B = (i/1000)%10; C = (i/100)%10; D = (i/10)%10; E = i%10; X = A+1; // 从竖式中不难推算出X = A+1 Y = (B + (C+2*D+1)/10)%10; // 同上 Z = (C+2*D+1)%10; //同上 ex = b(A,B,C,D,E,F,G,X,Y,Z); // 调用b方法判断A,B,C,D,E,F,G,X,Y,Z相互之间是否相等 if (ex) continue; // 如果A,B,C,D,E,F,G,X,Y,Z当中有相等的，则继续循环 XYZDE = X*10000+Y*1000+Z*100+D*10+E; if ((i+(DFG*2)) == XYZDE) &#123; System.out.println("A= "+A+" B= "+B+" C= "+C+" D= "+D+" E= "+E+" F= "+F+" G= "+G+" X= "+X+" Y= "+Y+" Z= "+Z); System.out.println(" "); System.out.println(A+" "+B+" "+C+" "+D+" "+E); System.out.println(" "+D+" "+F+" "+G+" "+" "+D+" "+F+" "+G+" "); System.out.println("---------"); System.out.println(X+" "+Y+" "+Z+" "+D+" "+E); &#125; &#125; &#125; Date d2 = new Date(); // 代码运行后的时间，可去掉 System.out.println(d2.getTime()-d1.getTime()); // 计算代码运行后和运行前的时间差，得出代码运行时间，可去掉&#125;public static void main(String args[])&#123; count(); // 调用count()方法&#125;&#125; 题目二 A、B、C、D、E五名学生有可能参加计算机竞赛，根据下列条件判断哪些人参加了竞赛： A参加时，B也参加； B和C只有一个人参加； C和D或者都参加，或者都不参加； D和E中至少有一个人参加； 如果E参加，那么A和D也都参加。 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243import java.util.*;public class text1&#123; public static void print(boolean A,boolean B,boolean C,boolean D,boolean E) //根据A、B、C、D、E的逻辑值输出结果 &#123; System.out.println("A:"+A); System.out.println("B:"+B); System.out.println("C:"+C); System.out.println("D:"+D); System.out.println("E:"+E); &#125; public static void judge() &#123; boolean A = true,B,C,D,E;//先假设A是参加的 Date d1 = new Date(); for (int i = 0;i &lt; 2;i++) &#123; A = !A; B = A; C = !B; D = C; if (D == false) &#123; E = true; if (A == E &amp;&amp; D == E) print(A,B,C,D,E); &#125; else &#123; E = true; if (A == E &amp;&amp; D == E) print(A,B,C,D,E); else E = false; print(A,B,C,D,E); &#125; &#125; Date d2 = new Date(); System.out.println(d2.getTime()-d1.getTime()); &#125; public static void main(String args[]) &#123; judge(); &#125;&#125; 题目三 打印一个 N*N 的方阵，N为每边字符的个数（3&lt;N&lt;20）, 要求最外一层为”T”, 第二层为”J”, 从第三层起每层依次打印数字 1,2,3,…（下图以N为15为例）123456789101112131415TTTTTTTTTTTTTTTTJJJJJJJJJJJJJTTJ11111111111JTTJ12222222221JTTJ12333333321JTTJ12344444321JTTJ12345554321JTTJ12345654321JTTJ12345554321JTTJ12344444321JTTJ12333333321JTTJ12222222221JTTJ11111111111JTTJJJJJJJJJJJJJTTTTTTTTTTTTTTTT 代码如下： //分析思路：把数组拆分来看，先赋值左上角部分，再将左上角部分水平翻转赋值给右上角部分，再将上半部分垂直翻转赋值给下半部分 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172import java.util.*;public class text3&#123; public static int inputN() //从键盘录入N值，并判断如果N不是整数或者N不是&gt;3和&lt;20的，打印错误信息 &#123; int N; while (true) &#123; Scanner sc = new Scanner(System.in); if (!sc.hasNextInt()) &#123; System.out.println("Input Error!"); continue; &#125; N = sc.nextInt(); if (N &gt; 19 || N &lt; 4) &#123; System.out.println("Input Error!"); continue; &#125; break; &#125; return N; &#125; public static void matrix() &#123; int N = inputN(); int l; String temp[] = &#123;"T","J","1","2","3","4","5","6","7","8"&#125;; String M[][] = new String[N][N]; l = (int) (N/2.0+0.5);//循环次数，奇数时为(N+1)/2，偶数时为N/2 Date d1 = new Date(); for (int i = 0 ;i &lt; l;i++)//左上角部分的赋值 &#123; for (int j = i;j &lt; l;j++) &#123; M[i][j] = M[j][i] = temp[i]; &#125; &#125; for (int i = 0;i &lt; l;i++)//右上角部分的赋值（左上角的水平翻转） &#123; for (int j = 0;j &lt; l;j++) &#123; M[i][N-1-j] = M[i][j]; &#125; &#125; for (int i = 0;i &lt; N;i++)//下半部分的赋值（上半部分的垂直翻转） &#123; for (int j = 0;j &lt; N;j++) &#123; M[N-1-i][j] = M[i][j]; &#125; &#125; for (int i = 0;i &lt; M.length;i++)//打印整个数组 &#123; for (int j = 0;j &lt; M.length;j++) &#123; System.out.print(M[i][j]+" "); &#125; System.out.println(); &#125; Date d2 = new Date(); System.out.println(d2.getTime()-d1.getTime()); &#125; public static void main(String args[]) &#123; matrix(); &#125;&#125; 题目四 在N行N列的数阵中, 数K(1&lt;=K&lt;=N)在每行和每列中出现且仅出现一次，这样的数阵叫N阶拉丁方阵。例如下图就是一个五阶拉丁方阵。编一程序，从键盘输入N值后，打印出所有不同的N阶拉丁方阵，并统计个数。 123451 2 3 4 52 3 4 5 13 4 5 1 24 5 1 2 35 1 2 3 4 这题不会做。。。。 题目五 输入一个十进数，将其转换成 N 进制数（0&lt;N&lt;=16)。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172//程序说明：正整数版本，不包括负数和小数import java.util.*;public class text7&#123; public static long inputN()//从键盘录入N，并判断N的范围和数据类型 &#123; long N; while (true) &#123; Scanner sc = new Scanner(System.in); if (!sc.hasNextLong()) &#123; System.out.println("Input Error!"); continue; &#125; N = sc.nextLong(); if (N &lt; 2 || N &gt; 16) &#123; System.out.println("Input Error!"); continue; &#125; break; &#125; return N; &#125; public static long inputD()//从键盘录入一个十进制数，并判断数据类型 &#123; long D; while (true) &#123; Scanner sc = new Scanner(System.in); if (!sc.hasNextLong()) &#123; System.out.println("Input Error!"); continue; &#125; D = sc.nextLong(); break; &#125; return D; &#125; public static void converter() &#123; System.out.print("请输入一个十进制数："); long D = inputD(); System.out.print("请输入想转换的进制数N(0&lt;N&lt;=16)："); long N = inputN(); char c[] = &#123;'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'&#125;; ArrayList al = new ArrayList(); if (D == 0) System.out.println("\n10进制数转为"+N+"进制数为：0"); else System.out.print("\n10进制数转为"+N+"进制数为："); while (D != 0) &#123; al.add(c[(int)(D%N)]);//N进制转换，D%N赋值给动态数组 D /= N; &#125; Object temp[] = new Object[al.size()]; int k = al.size(); for (int i = 0;i &lt; k;i++) &#123; temp[i] = al.get(k-i-1);//将动态数组逆序赋值，从而获得该十进制数的N进制数 System.out.print(temp[i]); &#125; System.out.println("\n"); &#125; public static void main(String args[]) &#123; converter(); &#125;&#125; 题目六 矩阵中填数. 当给出 N*N 的矩阵，要求用程序填入下列形式的数：123456789101112① 倒填，例如N=5 ② 蛇形填数 ③ 回转填数┌──┬──┬──┬──┬──┐ ┌──┬──┬──┬──┬──┐ ┌──┬──┬──┬──┬──┐│25│24│23│22│21│ │ 1│ 3│ 4│10│11│ │ 1│16│15│14│13│├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤│20│19│18│17│16│ │ 2│ 5│ 9│12│19│ │ 2│17│24│23│12│├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤│15│14│13│12│11│ │ 6│ 8│13│18│20│ │ 3│18│25│22│11│├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤│10│ 9│ 8│ 7│ 6│ │ 7│14│17│21│24│ │ 4│19│20│21│10│├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤ ├──┼──┼──┼──┼──┤│ 5│ 4│ 3│ 2│ 1│ │15│16│22│23│25│ │ 5│ 6│ 7│ 8│ 9│└──┴──┴──┴──┴──┘ └──┴──┴──┴──┴──┘ └──┴──┴──┴──┴──┘ 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161import java.util.*;public class text5&#123; public static int inputN() // 从键盘录入N &#123; int N; while (true) &#123; System.out.print("Please Input N:"); Scanner sc = new Scanner(System.in); if (!sc.hasNextInt()) &#123; System.out.println("Input Error!"); continue; &#125; N = sc.nextInt(); if (N &lt;= 0) &#123; System.out.println("Input Error!"); continue; &#125; break; &#125; return N; &#125; public static void print(int N,int sz[][]) // 构造打印数组的方法 &#123; for (int i = 0;i &lt; N;i++) &#123; for (int j = 0;j &lt; N;j++) &#123; System.out.print(sz[i][j]+"\t"); &#125; System.out.println(); &#125; &#125; public static void dx() // 倒型填数 &#123; int N = inputN(); int l = N*N; int dx[][] = new int[N][N]; System.out.println("\n"+N+"阶倒型填数矩阵："); for (int i = 0 ;i &lt; dx.length;i++) &#123; for (int j = 0;j &lt; dx.length;j++) &#123; dx[i][j] = l; l--; &#125; &#125; print(N,dx); &#125; public static void sx() // 蛇形填数 &#123; int N = inputN(),k = 0,m = 0,n = 0; //m为行，n为列 int sx[][] = new int[N][N]; System.out.println("\n"+N+"阶蛇型填数矩阵："); for (int i = 0;i &lt; N;i++) //控制行数 &#123; for (int j = N-i;j &lt;= N;j++) //控制每行的元素个数 &#123; k++; sx[m][n] = k; if (i%2 == 0 &amp;&amp; i != 0 &amp;&amp; j!= N) // 偶数行m+1,n-1，左下移 &#123; m++; n--; &#125; if (i%2 != 0 &amp;&amp; i != 0 &amp;&amp; j!= N) // 奇数行m-1,n+1，右上移 &#123; m--; n++; &#125; if (j == N &amp;&amp; i%2 == 0) m++; //偶数行最后一个元素，下移 if (j == N &amp;&amp; i%2 != 0) n++; //奇数行最后一个元素，右移 &#125; &#125; m = n = N-1; //把m,n值变为数组最后一个元素的下标，从后面填数 k = N*N; //同上 for (int i = 0;i &lt; N-1;i++)// 翻转填数，原理同上 &#123; for (int j = N-i;j &lt;= N;j++) //同上 &#123; sx[m][n] = k; k--; if (i%2 == 0 &amp;&amp; i != 0 &amp;&amp; j!= N) // 偶数行m-1,n+1，左下移 &#123; m--; n++; &#125; if (i%2 != 0 &amp;&amp; i != 0 &amp;&amp; j!= N) // 奇数行m+1,n-1，右上移 &#123; m++; n--; &#125; if (j == N &amp;&amp; i%2 == 0) m--;//偶数行最后一个元素，下移 if (j == N &amp;&amp; i%2 != 0) n--;//奇数行最后一个元素，右移 &#125; &#125; print(N,sx); &#125; public static void hx() // 回型填数 &#123; int N = inputN(),k = 1,m = 0,n = 0,counter = 0,l = 1; // m为行，n为列，k为赋值数，counter为除第一数列外其他数列的标记数，终值为2，l为数列的个数，变化范围：[1,2N-1] int hx[][] = new int[N][N]; System.out.println("\n"+N+"阶回型填数矩阵："); for (int i = 1;i &lt;= N;i++) &#123; while (counter &lt; 2) // 除第一数列外，其余数列均进行此循环体2次 &#123; for (int j = i;j &lt;= N;j++) &#123; hx[m][n] = k; k++; if (l%4 == 1) // 靠左数列，下移，到达最后一个元素后，右移 &#123; if (j != N) m++; else n++; &#125; if (l%4 == 2) // 靠下数列，右移，到达最后一个元素后，上移 &#123; if (j != N) n++; else m--; &#125; if (l%4 == 3) // 靠右数列，上移，到达最后一个元素后，左移 &#123; if (j != N) m--; else n--; &#125; if (l%4 == 0) // 靠上数列，左移，到达最后一个元素后，下移 &#123; if (j != N) n--; else m++; &#125; if (j == N) &#123; if (i != 1) counter++; l++; &#125; &#125; if (i == 1) counter = 2; &#125; counter = 0; &#125; print(N,hx); &#125; public static void main(String args[]) &#123; dx(); sx(); hx(); &#125;&#125; 题目七 读入一行文本，包含若干个单词（以空格间隔，％结尾）。将其中以A开头的单词与以N结尾的单词，用头尾交换的办法予以置换。 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273import java.util.*;public class text9&#123; public static String input()[]//该方法存储录入的字符串，并存入str[]&lt;String&gt;数组里 &#123; String In; int j = 0; Scanner sc = new Scanner(System.in); ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt;(); while (true) &#123; al.add(sc.nextLine());//将录入的每一行字符串存入动态数组里 In = al.get(j);//将每一行的字符串赋值给In j++; if (In.contains("%")) break;//判断In是否包含“%”，如果是，退出while循环 &#125; sc.close();//关闭Scanner流 String str[] = new String[al.size()]; for (int i = 0;i &lt; al.size();i++) &#123; str[i] = al.get(i);//将动态数组赋值给str数组 &#125; return str; &#125; public static void deal() &#123; String In[] = input(); String str[] = new String[1]; ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt; (); for (int i = 0;i &lt; In.length;i++) &#123; str = In[i].split(" ");//将数组里每一个数据（相当于输入的每一行）分割，分隔符为“ ”(空格)【相当于为了获得每一句的单词】 for (int j = 0;j &lt; str.length;j++) &#123; al.add(str[j]); if (str[j].contains("%"))//如果单词包含有“%”字符，则只获取“%”前（不包括“%”）的子字符串 &#123; int l = str[j].indexOf("%"); al.set(al.size()-1,str[j].substring(0,l)); break; &#125; &#125; &#125; al.trimToSize(); for (int i = 0;i &lt; al.size();i++) &#123; al.remove("");//去掉动态数组中的空字符串 &#125; String S[] = new String[al.size()]; char temp; for (int i = 0;i &lt; S.length;i++) &#123; S[i] = al.get(i); if (S[i].startsWith("A"))//以“A”开头的，首尾交换 &#123; temp = S[i].charAt(S[i].length()-1); S[i] = String.valueOf(temp).concat(S[i].substring(1,S[i].length()-1)).concat("A"); &#125; else if (S[i].endsWith("N"))//以“N”结尾的，首尾交换 &#123; temp = S[i].charAt(0); S[i] = "N".concat(S[i].substring(1,S[i].length()-1)).concat(String.valueOf(temp)); &#125; System.out.println(S[i]); &#125; &#125; public static void main(String args[]) &#123; deal(); &#125;&#125; 题目八 输入两个正整数X,Y，将X,Y化为二进制数，然后将这两个二进制数作二进制加法运算，再将结果化为十进制数输出。 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576import java.util.*;public class text8&#123; public static long input(char i)//构造输入方法，从键盘录入一个非负的long值 &#123; long N; while (true) &#123; System.out.print("Please Input "+i+":"); Scanner sc = new Scanner(System.in); if (!sc.hasNextLong()) &#123; System.out.println("Input Error!"); continue; &#125; N = sc.nextLong(); if (N &lt; 0) &#123; System.out.println("Input Error!"); continue; &#125; break; &#125; return N; &#125; public static void count() &#123; long X = input('X');//X long Y = input('Y');//Y long Bin_X = Long.parseLong(Long.toBinaryString(X));//将X转换为二进制 long Bin_Y = Long.parseLong(Long.toBinaryString(Y));//将Y转换为二进制 long Bin_XY = Bin_X + Bin_Y;//将二进制的X和Y相加 ArrayList&lt;Long&gt; al = new ArrayList&lt;Long&gt; (); long T = Bin_XY % 10;//二进制(X+Y)相加后的个位 while (Bin_XY != 0) &#123; if (T == 2)//如果为2，则该位为0，且进位+1 &#123; al.add((long)0); Bin_XY /= 10; T = Bin_XY % 10 + 1; continue; &#125; if (T == 3)//如果为3，则该位为1，且进位+1 &#123; al.add((long)1); Bin_XY /= 10; T = Bin_XY % 10 + 1; continue; &#125; else &#123; al.add(T);//如果为0或1，则该位为原值，进位无变化 Bin_XY /= 10; T = Bin_XY % 10; continue; &#125; &#125; if (T == 2) al.add((long)0);//因D=0，而最高位未处理，所以再执行多一次，下同 if (T == 3) al.add((long)1); else al.add(T); long Bin_Result = 0; for (int i = 0;i &lt; al.size();i++) &#123; Bin_Result += al.get(al.size()-1-i) * (long)Math.pow(10,al.size()-1-i);//将转换后的结果倒序*10^N再相加，得到转换后的二进制之和 &#125; System.out.println("Binary: "+Bin_X+"+"+Bin_Y+"="+Bin_Result); System.out.println("Decimal: "+X+"+"+Y+"="+Long.parseLong(Long.toString(Bin_Result),2)); &#125; public static void main(String args[]) &#123; count(); &#125;&#125; 题目九 四人玩火柴棍游戏，每一次都是三个人赢，一个人输。输的人要按赢者手中的火柴数进行赔偿，即赢者手中有多少根火柴棍，输者就赔偿多少根。现知道玩过四次后，每人恰好输过一次，而且每人手中都正好有16根火柴。问此四人做游戏前手中各有多少根火柴? 编程解决此问题。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657/**分析结果 A B C D原来 33 17 9 5ALose 2 34 18 10BLose 4 4 36 20CLose 8 8 8 40DLose 16 16 16 16逆向反推，其中一个最小值=其余所有值/2相加和+自身值；正推，每轮最大值为输家，除最大值外，其余所有值*2，最大值-其余所有值*2；*/public class text10&#123; public static int findMin(int a[]) // 返回数组内最小值的下标，如果多个值相等并同为最小值，则返回最后一个最小值的下标 &#123; int min_ = 0,min = a[0]; for (int i = 1;i &lt; a.length;i++) &#123; if (a[i] &lt;= min) &#123; min_ = i; min = a[i]; &#125; &#125; return min_; &#125; public static void count() &#123; int R[] = new int[4]; int l = 0; for (int i = 0;i &lt; 4;i++) R[i] = 16; for (int i = 0;i &lt; 4;i++) //共进行4轮游戏 &#123; l = findMin(R); //每轮的最后一个最小值 for (int j = 0;j &lt; 4;j++) &#123; if (j != l) //数组内除最小值外的其他元素 &#123; R[j] /= 2; R[l] += R[j]; &#125; &#125; &#125; for (int i = 0;i &lt; 4;i++) &#123; System.out.print(R[i]); &#125; &#125; public static void main(String args[]) &#123; count(); &#125;&#125; 题目十 如图所示，编写程序计算大大小小正方形共有多少？当最小正方行边长为1时，它们的总面积共为多少？10*101234567891011┎┰┰┰┰┰┰┰┰┰┒┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┠╂╂╂╂╂╂╂╂╂┨┖┸┸┸┸┸┸┸┸┸┚ 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/**分析结果：递归算法个数：1*1 = 12*2 = 4+1*1 = 53*3 = 9+2*2+1*1 = 144*4 = 16+3*3+2*2+1*1 = 30…………10*10 = 100+81+64+49+……+9+4+1 = 385面积：1*1 = 1*(1*1) = 12*2 = 4*(1*1)+1*(2*2) = 83*3 = 9*(1*1)+4*(2*2)+1*(3*3) = 344*4 = 16*(1*1)+9*(2*2)+4*(3*3)+1*(4*4) = 104…………10*10 = 100*1+81*4+64*9+49*16+36*25+25*36+16*49+9*64+4*81+1*100*/public class text11&#123; public static int count(int num)//正方形个数的计算方法 &#123; int sum; if (num == 1) &#123; return 1; &#125; else &#123; sum = num*num + count(num-1);//sum = N*N+(N-1)*(N-1)+(N-2)*(N-2)+……+2*2+1*1 &#125; return sum; &#125; public static int area(int num)//正方形总面积的计算方法 &#123; int sum = 0,i = 1; while (num != 1) &#123; sum += num*num*i*i;//sum = N*N*1*1+(N-1)*(N-1)*2*2+……+2*2*(N-1)*(N-1)+1*1*N*N i++; num--; &#125; return sum; &#125; public static void main(String args[]) &#123; System.out.println("┎┰┰┰┰┰┰┰┰┰┒"); for (int i = 0;i &lt; 9;i++) &#123; System.out.println("┠╂╂╂╂╂╂╂╂╂┨"); &#125; System.out.println("┖┸┸┸┸┸┸┸┸┸┚"+"\n"+"10*10"+"\n"); System.out.println("正方形个数："+count(10)); System.out.println("总面积："+area(10)); &#125;&#125; 题目十一 小明和小强都是张老师的学生，张老师的生日是M月N日，2人都知道张老师的生日是下列10组中的一天，张老师把M值告诉了小明，把N值告诉了小强，张老师问他们知道他的生日是那一天吗？ 3月4日 3月5日 3月8日 6月4日 6月7日 9月1日 9月5日 12月1日 12月2日 12月8日 小明说：如果我不知道的话，小强肯定也不知道 小强说：本来我也不知道，但是现在我知道了 小明说：哦，那我也知道了 请根据以上对话推断出张老师的生日是哪一天 解题思路：由小明第一句话可知，此月可能为3月或9月。因为6月有个7日，12月有个2日，如果M为6或12的话，小强有可能知道，而小明肯定不知道。由小强的话可知，此日可能为1日、4日或8日。因为如果N为5的话，小强无法判断是3月5日还是9月5日，而不会说现在我知道了。由小明第二句话可知，此月必为9月。因为如果是3月，小明无法判断是3月4日还是3月8日，而他说那我也知道了。 代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576public class text6&#123; public static void birthday() &#123; int month[] = &#123;3,3,3,6,6,9,9,12,12,12&#125;; int day[] = &#123;4,5,8,4,7,1,5,1,2,8&#125;; int counter = 0,temp; for (int i = 0;i &lt; day.length;i++) &#123; counter = 0; for (int j = 0;j &lt; day.length;j++) &#123; if (day[i] == day[j] &amp;&amp; i != j) counter++; &#125; if (counter == 0) &#123; day[i] = 0; temp = month[i]; for (int k = 0;k &lt; month.length;k++) &#123; if (month[k] == temp) month[k] = 0; &#125; &#125; &#125; for (int k = 0;k &lt; day.length;k++) &#123; if (month[k] == 0) day[k] = 0; &#125; for (int i = 0;i &lt; day.length;i++) &#123; counter = 0; for (int j = 0;j &lt; day.length;j++) &#123; if (day[i] == day[j] &amp;&amp; i != j) &#123; day[i] = 0; day[j] = 0; &#125; &#125; for (int k = 0;k &lt; month.length;k++) &#123; if (day[k] == 0) month[k] = 0; &#125; &#125; for (int i = 0;i &lt; month.length;i++) &#123; counter = 0; for (int j = 0;j &lt; month.length;j++) &#123; if (month[i] == month[j] &amp;&amp; i != j) &#123; month[i] = 0; month[j] = 0; &#125; &#125; for (int k = 0;k &lt; day.length;k++) &#123; if (month[k] == 0) day[k] = 0; &#125; &#125; for (int i = 0;i &lt; month.length;i++) &#123; for (int j = 0;j &lt; day.length;j++) &#123; if (month[i] !=0 &amp;&amp; day[i] != 0) System.out.println("Birthday: "+month[i]+"月"+day[i]+"日"); break; &#125; &#125; &#125; public static void main(String args[]) &#123; birthday(); &#125;&#125; 题目十二 双倍超立方数是指一个正整数可以正好被拆分为两种不同的a^3+b^3的方式，其中a,b均为整数且0&lt;a&lt;=b。对于任何一个指定的 int n, 返回所有的小于等于n的双倍超立方数的个数。 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768import java.util.*;public class text2&#123; public static int inputN() &#123; int N; while (true) &#123; Scanner sc = new Scanner(System.in); if (!sc.hasNextInt()) &#123; System.out.println("Input Error!"); continue; &#125; N = sc.nextInt(); if (N &lt;= 0) &#123; System.out.println("Input Error!"); continue; &#125; break; &#125; return N; &#125; public static void count() &#123; System.out.print("N:"); int N = inputN(),counter = 0; for (int i = 1;i &lt;= N;i++) &#123; for (int b = 1;b &lt;= N;b++) &#123; for (int a = 1;a &lt;= b;a++) &#123; if (i == a*a*a+b*b*b) &#123; System.out.print(i+"="+a+"^3+"+b+"^3"+"\n"); counter++; &#125; &#125; &#125; &#125; System.out.println("\n双倍超立方数的个数: "+counter+"\n"); &#125; public static void count2() &#123; System.out.print("N:"); int N = inputN(),counter = 0; for (int b = 1;b &lt;= N;b++) &#123; for (int a = 1;a &lt;= b;a++) &#123; if (N == a*a*a+b*b*b) &#123; System.out.print(N+"="+a+"^3+"+b+"^3"+"\n"); counter++; &#125; &#125; &#125; System.out.println("\n双倍超立方数"+N+"的个数: "+counter+"\n"); &#125; public static void main(String args[]) &#123;// count();// count2() &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849/**另一种算法：import java.util.Hashtable;import java.util.Map;import java.util.Set;import java.util.Map.Entry;public class text3 &#123; private static Map&lt;Integer, Integer&gt; cache = new Hashtable&lt;Integer, Integer&gt;();// 键为立方和，值为次数 public static int count(int n) &#123; if (n &lt; 1 || n &gt; 1000000000) return 0; int count = 0; int max = (int) java.lang.Math.pow(n, 1.0f / 3.0f); for (int a = 1; a &lt;= max; a++) &#123; for (int b = a; b &lt;= max; b++) &#123; int tmp = a * a * a + b * b * b; if (cache.get(tmp) == null) &#123; cache.put(tmp, 1); &#125; else &#123; int num = cache.get(tmp); cache.put(tmp, num + 1); &#125; &#125; &#125; Set&lt;Entry&lt;Integer, Integer&gt;&gt; entrys = cache.entrySet(); for (Entry&lt;Integer, Integer&gt; entry : entrys) &#123; int key = entry.getKey(); int value = entry.getValue(); if (key &lt;= n &amp;&amp; value == 2) ++count; &#125; return count; &#125; public static void main(String[] args) &#123; long t1 = System.currentTimeMillis(); int n = 1000000000; System.out.println(count(n)); long t2 = System.currentTimeMillis(); System.out.println(t2 - t1); &#125;&#125;*/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Java随记之Helloworld篇]]></title>
      <url>https://goldymark.github.io/2009/08/25/java%E9%9A%8F%E8%AE%B0%E4%B9%8Bhelloworld%E7%AF%87/</url>
      <content type="text"><![CDATA[趁着暑假有空，自己问人借了本书开始自学Java。由于本人无任何编程基础，所以看起来会比较难理解。 万事开头难，但如果真的想去做一件事，目前的困难只是让你在成功之后能有所回味而已，而不会称为现在的绊脚石。 先来一个几乎所有编程都会用到的一个例子：Helloworld程序 123456public class HelloWorld &#123; public static void main(String args[]) &#123; System.out.println("HelloWorld!I'm coming!"); &#125;&#125; 这个程序的运行结果就是在屏幕上显示HelloWorld!I&#39;m coming!这条消息。 在这里我插一句话，很多人都在问怎样才能最快地学习一门计算机语言，每个人的见解都不同，我听一个信息学院的人说：他们老师总是把一段有错误的代码给他们修复，然后他们就在修复的过程中真正了解到代码里每一个语句的作用，代码为什么错了，哪里错了，怎样改正……我觉得这种学习方法是不错的一种方法。还有另一种我个人觉得也不错：“学习语言的最终目标是把程序破坏”，咋一看，这不是叫人搞破坏嘛？其实不是这样理解。就把上面那个Helloworld程序做例子：public是什么意思？为什么要用public？能用其他代替public吗？我不显示HelloWorld!I&#39;m coming!显示其他行吗？…………这里所说的把程序破坏其实是理解为把程序拆解，就像拆开一件电器来研究里面的元件构造一样。例如：我把一个收音机拆开了，看到了里面的构造，知道了他的工作原理，然后我就想能不能把某个元件换了，使收音机的音量能更大？改造完之后，我再装回去。这样，一个改造后的收音机就完成了，在这个过程中我也了解到了收音机的构造原理，并且通过自己的思考来改造了收音机。这个过程简单地概括一下就是：拆-知-（改）-装。 我还是用自己第一次写Helloworld程序来做例子。当我第一次把程序代码写好保存后再编译，失败了。然后我就想，为什么会失败呢？然后自己慢慢摸索，发现把public删掉后就能正常运行了。后来又慢慢摸索，发现如果加上public的话，保存的文件名与class后面的类名要相同，否则就不能编译。修改后，能正常编译了，然后我就想，能不能显示其他的信息呢？于是我又把那句HelloWorld!I&#39;m coming!改成了其他内容，也能正常显示。至此，我初学时对Helloworld的认知程度就到这了。 后来我看到了后面，再回过头来看这个Helloworld程序，也明白了很多关键词的作用。以下我按个人理解来一行行的分析： 1public class HelloWorld&#123;&#125; 在Java里面是有区分大小写的，例如你定义了类名是HelloWorld，你运行时输入的类名也一定要是HelloWorld，而不能是helloworld，否则就会出现运行失败的提示。 先从整个语句来解释，这个语句的作用就是定义一个访问权限是公共的、类名为HelloWorld的类，格式是(public)+class+类名+{}，{}里面就是类的内部。 public: 从字面意思上不难看出，这个关键词大概是“公共”的意思，它的作用就是修饰类的访问权限，public所修饰的访问权限是最低的； class: 定义一个类，后面要加类名； HelloWorld: 类名，可以自定义，如果用public修饰的话，保存的文件名与这个类名一定要相同才能编译； {}: 类的内部具体定义； 1public static void main(String args[])&#123;&#125; 这个是main()方法的语句，main()方法是一个程序的入口，一个程序必需有main()方法才能运行，系统正是通过main()入口才能找到运行程序的方法。 static: static是静态的意思，表示该数据或对象在内存中只有一份。static关键字可以修饰数据、方法和类。其实static可以修饰任何类型的数据； void: 返回类型，void是“空的”的意思，就是说返回类型是空的； main(String args[]): 受本人知识所限，还不能很清楚地解释()里面的内容，不好意思； 1System.out.println("HelloWorld!I'm coming!"); 语句的意思：在屏幕上显示HelloWorld!I&#39;m coming!的语句。 System.out.println(): 在屏幕上显示()里面的内容，里面的内容可以自定义，如果是字符串，则()里面要加&quot;&quot;【Java里面所有的字符都是在英文输入法半角状态下输入的】。其中，System的首字母一定要大写，否则系统不能辨认；println也可以用print代替，不过println具有换行的功能，而print没有。println相当于c语言里面\n换行符的功能。 ;: 每个语句的末尾都要加;，以示该语句结束。 好了，今天先说到这里先，以后有机会上Blog再写其他的。]]></content>
    </entry>

    
  
  
</search>
